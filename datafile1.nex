#NEXUS
[written Sun Oct 01 11:29:30 CEST 2017 by Mesquite  version 3.31 (build 859) at JMSs-Air.lan/192.168.1.15]

BEGIN TAXA;
	TITLE Unpaid_seller;
	DIMENSIONS NTAX=56;
	TAXLABELS
		NLWNH1809_ NLBW1838 NLWvK1838 NLBW1992 FRCC1804 FRCdC1807 FRCdC2001 BEHyp1851 BEWvK1851 LUCdC2013 ITCC1942 ROCC1864 ROCC2011 BGLOC1892 BGLOC1951 LTCC2000 HRCO2006 NOMC1994 UKSGA1893 QCCC1866 QCCC1994 LACC1825 USUCC1952 CNCL1999 JPBA2004 SA1880 SAIns1396 DDRZGB1976 D150 INST533 PRAvB1389 STThol1366 STZzee1429 STZzee1485 STDBr1445 STZld1495 STVrn1519 STOam1618 STGro1701 STAms1530 STAms1626 STAms1658 STRdm1702 STZwo1794 STRmd1620 STAwn1545 STAwn1582 STAwn1608 STDne1577 STPar1580 PaPa1306 STMrs1253 STPsa1161 STSna1262 STSri1316 STAbg1288 
	;

END;


BEGIN CHARACTERS;
	TITLE  Features;
	DIMENSIONS  NCHAR=16;
	FORMAT DATATYPE = STANDARD GAP = - MISSING = ? SYMBOLS = "  0 1 2 3 4 5 6 7 8 9";
	MATRIX
	NLWNH1809_  3201900000000000
	NLBW1838    3100410100100000
	NLWvK1838   3201410100?00010
	NLBW1992    0001610100001100
	FRCC1804    1100100100100010
	FRCdC1807   3401910100?00010
	FRCdC2001   3401810100?00010
	BEHyp1851   3100110100100010
	BEWvK1851   3401910100?00010
	LUCdC2013   3201910100?00010
	ITCC1942    3100310100?00000
	ROCC1864    1100100100100010
	ROCC2011    3000200100?00000
	BGLOC1892   3?009?0000000000
	BGLOC1951   3?00300100010000
	LTCC2000    3001910010210101
	HRCO2006    40019?00000000?0
	NOMC1994    40019100000000?0
	UKSGA1893   40019?00001000?0
	QCCC1866    0000720100300000
	QCCC1994    0000420100011000
	LACC1825    3000150200000000
	USUCC1952   4400950000?000?0
	CNCL1999    40019500000000?0
	JPBA2004    4401950000?000?0
	SA1880      01005?0000300000
	SAIns1396   0200250000?001?0
	DDRZGB1976  00019?0000000000
	D150        0010900000000001
	INST533     0010900000000001
	PRAvB1389   0201900000000000
	STThol1366  00?09?0001000000
	STZzee1429  0000000000000000
	STZzee1485  0000100000000000
	STDBr1445   ?0229?0001000000
	STZld1495   0000000000000000
	STVrn1519   0000900001000000
	STOam1618   0011900000000001
	STGro1701   00119?0000000001
	STAms1530   30109?0000000000
	STAms1626   02119?0000300000
	STAms1658   00105?0000000000
	STRdm1702   000?500000000000
	STZwo1794   0011510000000000
	STRmd1620   0011910000010000
	STAwn1545   00000?0000000000
	STAwn1582   03010?0000300000
	STAwn1608   0001340000300000
	STDne1577   03019?00000?0000
	STPar1580   1001900000000000
	PaPa1306    ?20??50000000000
	STMrs1253   1201930000000000
	STPsa1161   22?1950100000000
	STSna1262   02?1920000000000
	STSri1316   10029?1000000000
	STAbg1288   02?19?0000000000

;

END;
BEGIN ASSUMPTIONS;
	TYPESET * UNTITLED   =  unord:  1 -  16;

END;

BEGIN MESQUITECHARMODELS;
	ProbModelSet * UNTITLED   =  'Mk1 (est.)':  1 -  16;
END;

BEGIN TREES[!'Parameters: Tree search criterion: minimize Tree value using character matrix'];
	Title 'Trees from Mesquite''s heuristic search';
	ID 015eb2fcea281;
	LINK Taxa = Unpaid_seller;
	TRANSLATE
[0] 		1 NLWNH1809_,
[1] 		2 NLBW1838,
[2] 		3 NLWvK1838,
[3] 		4 NLBW1992,
[4] 		5 FRCC1804,
[5] 		6 FRCdC1807,
[6] 		7 FRCdC2001,
[7] 		8 BEHyp1851,
[8] 		9 BEWvK1851,
[9] 		10 LUCdC2013,
[10] 		11 ITCC1942,
[11] 		12 ROCC1864,
[12] 		13 ROCC2011,
[13] 		14 BGLOC1892,
[14] 		15 BGLOC1951,
[15] 		16 LTCC2000,
[16] 		17 HRCO2006,
[17] 		18 NOMC1994,
[18] 		19 UKSGA1893,
[19] 		20 QCCC1866,
[20] 		21 QCCC1994,
[21] 		22 LACC1825,
[22] 		23 USUCC1952,
[23] 		24 CNCL1999,
[24] 		25 JPBA2004,
[25] 		26 SA1880,
[26] 		27 SAIns1396,
[27] 		28 DDRZGB1976,
[28] 		29 D150,
[29] 		30 INST533,
[30] 		31 PRAvB1389,
[31] 		32 STThol1366,
[32] 		33 STZzee1429,
[33] 		34 STZzee1485,
[34] 		35 STDBr1445,
[35] 		36 STZld1495,
[36] 		37 STVrn1519,
[37] 		38 STOam1618,
[38] 		39 STGro1701,
[39] 		40 STAms1530,
[40] 		41 STAms1626,
[41] 		42 STAms1658,
[42] 		43 STRdm1702,
[43] 		44 STZwo1794,
[44] 		45 STRmd1620,
[45] 		46 STAwn1545,
[46] 		47 STAwn1582,
[47] 		48 STAwn1608,
[48] 		49 STDne1577,
[49] 		50 STPar1580,
[50] 		51 PaPa1306,
[51] 		52 STMrs1253,
[52] 		53 STPsa1161,
[53] 		54 STSna1262,
[54] 		55 STSri1316,
[55] 		56 STAbg1288;
	TREE 'Tree 1 from search (criterion: minimize Tree value using character matrix)' = (30,((29,(38,39)),(42,(((35,(32,37)),(34,(36,(33,46)))),(((14,40),((15,(13,(20,21))),((22,((2,11),(8,(5,12)))),((4,16),(53,(10,(3,(7,(6,9))))))))),(43,(48,((50,55),(((44,45),(18,(19,(24,(17,(23,25)))))),(28,((52,(54,(1,56))),(31,((49,51),((26,27),(41,47)))))))))))))));
	TREE 'Tree 2 from search (criterion: minimize Tree value using character matrix)' = (((7,(9,6)),3),(((((22,(((5,12),8),(11,2))),((((((((((((51,49),((27,26),(47,41))),31),(((1,56),54),52)),28),((44,45),(18,(19,(24,((25,23),17)))))),(55,50)),48),43),((((29,(39,38)),30),42),(((32,37),35),(((33,46),36),34)))),(40,14)),(15,((20,21),13)))),(16,4)),53),10));
	TREE 'Tree 3 from search (criterion: minimize Tree value using character matrix)' = ((7,(9,6)),((((((22,(((5,12),8),(11,2))),((((((((((((51,49),((27,26),(47,41))),31),(((1,56),54),52)),28),((44,45),(18,(19,(24,((25,23),17)))))),(55,50)),48),43),((((29,(39,38)),30),42),(((32,37),35),(((33,46),36),34)))),(40,14)),(15,((20,21),13)))),(16,4)),53),10),3));
	TREE 'Tree 4 from search (criterion: minimize Tree value using character matrix)' = (((10,(7,(9,6))),3),((((22,(((5,12),8),(11,2))),((((((((((((51,49),((27,26),(47,41))),31),(((1,56),54),52)),28),((44,45),(18,(19,(24,((25,23),17)))))),(55,50)),48),43),((((29,(39,38)),30),42),(((32,37),35),(((33,46),36),34)))),(40,14)),(15,((20,21),13)))),(16,4)),53));
	TREE 'Tree 5 from search (criterion: minimize Tree value using character matrix)' = (((10,(7,(9,6))),((((22,(((5,12),8),(11,2))),((((((((((((51,49),((27,26),(47,41))),31),(((1,56),54),52)),28),((44,45),(18,(19,(24,((25,23),17)))))),(55,50)),48),43),((((29,(39,38)),30),42),(((32,37),35),(((33,46),36),34)))),(40,14)),(15,((20,21),13)))),(16,4)),53)),3);
	TREE 'Tree 6 from search (criterion: minimize Tree value using character matrix)' = ((10,(((((22,(((5,12),8),(11,2))),((((((((((((51,49),((27,26),(47,41))),31),(((1,56),54),52)),28),((44,45),(18,(19,(24,((25,23),17)))))),(55,50)),48),43),((((29,(39,38)),30),42),(((32,37),35),(((33,46),36),34)))),(40,14)),(15,((20,21),13)))),(16,4)),53),(7,(9,6)))),3);
	TREE 'Tree 7 from search (criterion: minimize Tree value using character matrix)' = ((10,(7,(9,6))),(((((22,(((5,12),8),(11,2))),((((((((((((51,49),((27,26),(47,41))),31),(((1,56),54),52)),28),((44,45),(18,(19,(24,((25,23),17)))))),(55,50)),48),43),((((29,(39,38)),30),42),(((32,37),35),(((33,46),36),34)))),(40,14)),(15,((20,21),13)))),(16,4)),53),3));
	TREE 'Tree 8 from search (criterion: minimize Tree value using character matrix)' = (((((((22,((11,((5,12),8)),2)),((((((((((((51,49),((27,26),(47,41))),31),(((1,56),54),52)),28),((44,45),(18,(19,(24,((25,23),17)))))),(55,50)),48),43),((((29,(39,38)),30),42),(((32,37),35),(((33,46),36),34)))),(40,14)),(15,((20,21),13)))),(16,4)),53),10),(7,(9,6))),3);
	TREE 'Tree 9 from search (criterion: minimize Tree value using character matrix)' = (((((((22,(11,(((5,12),8),2))),((((((((((((51,49),((27,26),(47,41))),31),(((1,56),54),52)),28),((44,45),(18,(19,(24,((25,23),17)))))),(55,50)),48),43),((((29,(39,38)),30),42),(((32,37),35),(((33,46),36),34)))),(40,14)),(15,((20,21),13)))),(16,4)),53),10),(7,(9,6))),3);
	TREE 'Tree 10 from search (criterion: minimize Tree value using character matrix)' = (((((((22,(((5,12),8),(11,2))),((15,(((((((((((51,49),((27,26),(47,41))),31),(((1,56),54),52)),28),((44,45),(18,(19,(24,((25,23),17)))))),(55,50)),48),43),((((29,(39,38)),30),42),(((32,37),35),(((33,46),36),34)))),(40,14))),((20,21),13))),(16,4)),53),10),(7,(9,6))),3);
	TREE 'Tree 11 from search (criterion: minimize Tree value using character matrix)' = (((((((22,(((5,12),8),(11,2))),(15,((((((((((((51,49),((27,26),(47,41))),31),(((1,56),54),52)),28),((44,45),(18,(19,(24,((25,23),17)))))),(55,50)),48),43),((((29,(39,38)),30),42),(((32,37),35),(((33,46),36),34)))),(40,14)),((20,21),13)))),(16,4)),53),10),(7,(9,6))),3);
	TREE 'Tree 12 from search (criterion: minimize Tree value using character matrix)' = (((((((22,(((5,12),8),(11,2))),(15,(((20,21),(((((((((((51,49),((27,26),(47,41))),31),(((1,56),54),52)),28),((44,45),(18,(19,(24,((25,23),17)))))),(55,50)),48),43),((((29,(39,38)),30),42),(((32,37),35),(((33,46),36),34)))),(40,14))),13))),(16,4)),53),10),(7,(9,6))),3);
	TREE 'Tree 13 from search (criterion: minimize Tree value using character matrix)' = (((((((22,(((5,12),8),(11,2))),(15,((20,21),((((((((((((51,49),((27,26),(47,41))),31),(((1,56),54),52)),28),((44,45),(18,(19,(24,((25,23),17)))))),(55,50)),48),43),((((29,(39,38)),30),42),(((32,37),35),(((33,46),36),34)))),(40,14)),13)))),(16,4)),53),10),(7,(9,6))),3);
	TREE 'Tree 14 from search (criterion: minimize Tree value using character matrix)' = (((((((22,(((5,12),8),(11,2))),(((40,((((((((((51,49),((27,26),(47,41))),31),(((1,56),54),52)),28),((44,45),(18,(19,(24,((25,23),17)))))),(55,50)),48),43),((((29,(39,38)),30),42),(((32,37),35),(((33,46),36),34))))),14),(15,((20,21),13)))),(16,4)),53),10),(7,(9,6))),3);
	TREE 'Tree 15 from search (criterion: minimize Tree value using character matrix)' = (((((((22,(((5,12),8),(11,2))),((40,(((((((((((51,49),((27,26),(47,41))),31),(((1,56),54),52)),28),((44,45),(18,(19,(24,((25,23),17)))))),(55,50)),48),43),((((29,(39,38)),30),42),(((32,37),35),(((33,46),36),34)))),14)),(15,((20,21),13)))),(16,4)),53),10),(7,(9,6))),3);
	TREE 'Tree 16 from search (criterion: minimize Tree value using character matrix)' = (((((((22,(((5,12),8),(11,2))),((40,14),(15,(((20,21),((((((((((51,49),((27,26),(47,41))),31),(((1,56),54),52)),28),((44,45),(18,(19,(24,((25,23),17)))))),(55,50)),48),43),((((29,(39,38)),30),42),(((32,37),35),(((33,46),36),34))))),13)))),(16,4)),53),10),(7,(9,6))),3);
	TREE 'Tree 17 from search (criterion: minimize Tree value using character matrix)' = (((((((22,(((5,12),8),(11,2))),(((((((29,(39,38)),30),42),(((((((((51,49),((27,26),(47,41))),31),(((1,56),54),52)),28),((44,45),(18,(19,(24,((25,23),17)))))),(55,50)),48),43)),(((32,37),35),(((33,46),36),34))),(40,14)),(15,((20,21),13)))),(16,4)),53),10),(7,(9,6))),3);
	TREE 'Tree 18 from search (criterion: minimize Tree value using character matrix)' = (((((((22,(((5,12),8),(11,2))),((((((29,(39,38)),30),42),((((((((((51,49),((27,26),(47,41))),31),(((1,56),54),52)),28),((44,45),(18,(19,(24,((25,23),17)))))),(55,50)),48),43),(((32,37),35),(((33,46),36),34)))),(40,14)),(15,((20,21),13)))),(16,4)),53),10),(7,(9,6))),3);
	TREE 'Tree 19 from search (criterion: minimize Tree value using character matrix)' = (((((((22,(((5,12),8),(11,2))),((((((29,(39,38)),30),42),((((32,37),35),(((((((((51,49),((27,26),(47,41))),31),(((1,56),54),52)),28),((44,45),(18,(19,(24,((25,23),17)))))),(55,50)),48),43)),(((33,46),36),34))),(40,14)),(15,((20,21),13)))),(16,4)),53),10),(7,(9,6))),3);
	TREE 'Tree 20 from search (criterion: minimize Tree value using character matrix)' = (((((((22,(((5,12),8),(11,2))),((((((29,(39,38)),30),42),(((32,37),35),((((((((((51,49),((27,26),(47,41))),31),(((1,56),54),52)),28),((44,45),(18,(19,(24,((25,23),17)))))),(55,50)),48),43),(((33,46),36),34)))),(40,14)),(15,((20,21),13)))),(16,4)),53),10),(7,(9,6))),3);
	TREE 'Tree 21 from search (criterion: minimize Tree value using character matrix)' = (((((((22,(((5,12),8),(11,2))),((((((29,(39,38)),30),42),(((32,37),35),((((33,46),36),(((((((((51,49),((27,26),(47,41))),31),(((1,56),54),52)),28),((44,45),(18,(19,(24,((25,23),17)))))),(55,50)),48),43)),34))),(40,14)),(15,((20,21),13)))),(16,4)),53),10),(7,(9,6))),3);
	TREE 'Tree 22 from search (criterion: minimize Tree value using character matrix)' = (((((((22,(((5,12),8),(11,2))),((((((29,(39,38)),30),42),(((32,37),35),(((33,46),36),((((((((((51,49),((27,26),(47,41))),31),(((1,56),54),52)),28),((44,45),(18,(19,(24,((25,23),17)))))),(55,50)),48),43),34)))),(40,14)),(15,((20,21),13)))),(16,4)),53),10),(7,(9,6))),3);
	TREE 'Tree 23 from search (criterion: minimize Tree value using character matrix)' = (((((((22,(((5,12),8),(11,2))),((((43,((((29,(39,38)),30),42),(((32,37),35),(((33,46),36),34)))),((((((((51,49),((27,26),(47,41))),31),(((1,56),54),52)),28),((44,45),(18,(19,(24,((25,23),17)))))),(55,50)),48)),(40,14)),(15,((20,21),13)))),(16,4)),53),10),(7,(9,6))),3);
	TREE 'Tree 24 from search (criterion: minimize Tree value using character matrix)' = (((((((22,(((5,12),8),(11,2))),(((43,(((((((((51,49),((27,26),(47,41))),31),(((1,56),54),52)),28),((44,45),(18,(19,(24,((25,23),17)))))),(55,50)),48),((((29,(39,38)),30),42),(((32,37),35),(((33,46),36),34))))),(40,14)),(15,((20,21),13)))),(16,4)),53),10),(7,(9,6))),3);
	TREE 'Tree 25 from search (criterion: minimize Tree value using character matrix)' = (((((((22,(((5,12),8),(11,2))),(((43,(((((29,(39,38)),30),42),((((((((51,49),((27,26),(47,41))),31),(((1,56),54),52)),28),((44,45),(18,(19,(24,((25,23),17)))))),(55,50)),48)),(((32,37),35),(((33,46),36),34)))),(40,14)),(15,((20,21),13)))),(16,4)),53),10),(7,(9,6))),3);
	TREE 'Tree 26 from search (criterion: minimize Tree value using character matrix)' = (((((((22,(((5,12),8),(11,2))),(((43,((((29,(39,38)),30),42),(((((((((51,49),((27,26),(47,41))),31),(((1,56),54),52)),28),((44,45),(18,(19,(24,((25,23),17)))))),(55,50)),48),(((32,37),35),(((33,46),36),34))))),(40,14)),(15,((20,21),13)))),(16,4)),53),10),(7,(9,6))),3);
	TREE 'Tree 27 from search (criterion: minimize Tree value using character matrix)' = (((((((22,(((5,12),8),(11,2))),(((43,((((29,(39,38)),30),42),((((32,37),35),((((((((51,49),((27,26),(47,41))),31),(((1,56),54),52)),28),((44,45),(18,(19,(24,((25,23),17)))))),(55,50)),48)),(((33,46),36),34)))),(40,14)),(15,((20,21),13)))),(16,4)),53),10),(7,(9,6))),3);
	TREE 'Tree 28 from search (criterion: minimize Tree value using character matrix)' = (((((((22,(((5,12),8),(11,2))),(((43,((((29,(39,38)),30),42),(((32,37),35),(((((((((51,49),((27,26),(47,41))),31),(((1,56),54),52)),28),((44,45),(18,(19,(24,((25,23),17)))))),(55,50)),48),(((33,46),36),34))))),(40,14)),(15,((20,21),13)))),(16,4)),53),10),(7,(9,6))),3);
	TREE 'Tree 29 from search (criterion: minimize Tree value using character matrix)' = (((((((22,(((5,12),8),(11,2))),(((43,((((29,(39,38)),30),42),(((32,37),35),((((33,46),36),((((((((51,49),((27,26),(47,41))),31),(((1,56),54),52)),28),((44,45),(18,(19,(24,((25,23),17)))))),(55,50)),48)),34)))),(40,14)),(15,((20,21),13)))),(16,4)),53),10),(7,(9,6))),3);
	TREE 'Tree 30 from search (criterion: minimize Tree value using character matrix)' = (((((((22,(((5,12),8),(11,2))),(((43,((((29,(39,38)),30),42),(((32,37),35),(((33,46),36),(((((((((51,49),((27,26),(47,41))),31),(((1,56),54),52)),28),((44,45),(18,(19,(24,((25,23),17)))))),(55,50)),48),34))))),(40,14)),(15,((20,21),13)))),(16,4)),53),10),(7,(9,6))),3);
	TREE 'Tree 31 from search (criterion: minimize Tree value using character matrix)' = (((((((22,(((5,12),8),(11,2))),(((((48,43),(((((((51,49),((27,26),(47,41))),31),(((1,56),54),52)),28),((44,45),(18,(19,(24,((25,23),17)))))),(55,50))),((((29,(39,38)),30),42),(((32,37),35),(((33,46),36),34)))),(40,14)),(15,((20,21),13)))),(16,4)),53),10),(7,(9,6))),3);
	TREE 'Tree 32 from search (criterion: minimize Tree value using character matrix)' = (((((((22,(((5,12),8),(11,2))),((((48,((((((((51,49),((27,26),(47,41))),31),(((1,56),54),52)),28),((44,45),(18,(19,(24,((25,23),17)))))),(55,50)),43)),((((29,(39,38)),30),42),(((32,37),35),(((33,46),36),34)))),(40,14)),(15,((20,21),13)))),(16,4)),53),10),(7,(9,6))),3);
	TREE 'Tree 33 from search (criterion: minimize Tree value using character matrix)' = (((((((22,(((5,12),8),(11,2))),(((((((55,50),48),43),((((((51,49),((27,26),(47,41))),31),(((1,56),54),52)),28),((44,45),(18,(19,(24,((25,23),17))))))),((((29,(39,38)),30),42),(((32,37),35),(((33,46),36),34)))),(40,14)),(15,((20,21),13)))),(16,4)),53),10),(7,(9,6))),3);
	TREE 'Tree 34 from search (criterion: minimize Tree value using character matrix)' = (((((((22,(((5,12),8),(11,2))),(((((((55,50),48),((((((51,49),((27,26),(47,41))),31),(((1,56),54),52)),28),((44,45),(18,(19,(24,((25,23),17))))))),43),((((29,(39,38)),30),42),(((32,37),35),(((33,46),36),34)))),(40,14)),(15,((20,21),13)))),(16,4)),53),10),(7,(9,6))),3);
	TREE 'Tree 35 from search (criterion: minimize Tree value using character matrix)' = (((((((22,(((5,12),8),(11,2))),((((((55,50),(((((((51,49),((27,26),(47,41))),31),(((1,56),54),52)),28),((44,45),(18,(19,(24,((25,23),17)))))),48)),43),((((29,(39,38)),30),42),(((32,37),35),(((33,46),36),34)))),(40,14)),(15,((20,21),13)))),(16,4)),53),10),(7,(9,6))),3);
	TREE 'Tree 36 from search (criterion: minimize Tree value using character matrix)' = (((((((22,(((5,12),8),(11,2))),((((((55,50),48),(((((((51,49),((27,26),(47,41))),31),(((1,56),54),52)),28),((44,45),(18,(19,(24,((25,23),17)))))),43)),((((29,(39,38)),30),42),(((32,37),35),(((33,46),36),34)))),(40,14)),(15,((20,21),13)))),(16,4)),53),10),(7,(9,6))),3);
	TREE 'Tree 37 from search (criterion: minimize Tree value using character matrix)' = (((((((22,(((5,12),8),(11,2))),(((((((((44,45),(18,(19,(24,((25,23),17))))),(55,50)),48),43),(((((51,49),((27,26),(47,41))),31),(((1,56),54),52)),28)),((((29,(39,38)),30),42),(((32,37),35),(((33,46),36),34)))),(40,14)),(15,((20,21),13)))),(16,4)),53),10),(7,(9,6))),3);
	TREE 'Tree 38 from search (criterion: minimize Tree value using character matrix)' = (((((((22,(((5,12),8),(11,2))),(((((((((44,45),(18,(19,(24,((25,23),17))))),(55,50)),48),(((((51,49),((27,26),(47,41))),31),(((1,56),54),52)),28)),43),((((29,(39,38)),30),42),(((32,37),35),(((33,46),36),34)))),(40,14)),(15,((20,21),13)))),(16,4)),53),10),(7,(9,6))),3);
	TREE 'Tree 39 from search (criterion: minimize Tree value using character matrix)' = (((((((22,(((5,12),8),(11,2))),(((((((((44,45),(18,(19,(24,((25,23),17))))),(55,50)),(((((51,49),((27,26),(47,41))),31),(((1,56),54),52)),28)),48),43),((((29,(39,38)),30),42),(((32,37),35),(((33,46),36),34)))),(40,14)),(15,((20,21),13)))),(16,4)),53),10),(7,(9,6))),3);
	TREE 'Tree 40 from search (criterion: minimize Tree value using character matrix)' = (((((((22,(((5,12),8),(11,2))),((((((((44,45),(18,(19,(24,((25,23),17))))),((((((51,49),((27,26),(47,41))),31),(((1,56),54),52)),28),(55,50))),48),43),((((29,(39,38)),30),42),(((32,37),35),(((33,46),36),34)))),(40,14)),(15,((20,21),13)))),(16,4)),53),10),(7,(9,6))),3);
	TREE 'Tree 41 from search (criterion: minimize Tree value using character matrix)' = (((((((22,(((5,12),8),(11,2))),((((((((44,45),(18,(19,(24,((25,23),17))))),(55,50)),((((((51,49),((27,26),(47,41))),31),(((1,56),54),52)),28),48)),43),((((29,(39,38)),30),42),(((32,37),35),(((33,46),36),34)))),(40,14)),(15,((20,21),13)))),(16,4)),53),10),(7,(9,6))),3);
	TREE 'Tree 42 from search (criterion: minimize Tree value using character matrix)' = (((((((22,(((5,12),8),(11,2))),((((((((44,45),(18,(19,(24,((25,23),17))))),(55,50)),48),((((((51,49),((27,26),(47,41))),31),(((1,56),54),52)),28),43)),((((29,(39,38)),30),42),(((32,37),35),(((33,46),36),34)))),(40,14)),(15,((20,21),13)))),(16,4)),53),10),(7,(9,6))),3);
	TREE 'Tree 43 from search (criterion: minimize Tree value using character matrix)' = (((((((22,(((5,12),8),(11,2))),((((((((28,((44,45),(18,(19,(24,((25,23),17)))))),(55,50)),48),43),((((51,49),((27,26),(47,41))),31),(((1,56),54),52))),((((29,(39,38)),30),42),(((32,37),35),(((33,46),36),34)))),(40,14)),(15,((20,21),13)))),(16,4)),53),10),(7,(9,6))),3);
	TREE 'Tree 44 from search (criterion: minimize Tree value using character matrix)' = (((((((22,(((5,12),8),(11,2))),((((((((28,((44,45),(18,(19,(24,((25,23),17)))))),(55,50)),48),((((51,49),((27,26),(47,41))),31),(((1,56),54),52))),43),((((29,(39,38)),30),42),(((32,37),35),(((33,46),36),34)))),(40,14)),(15,((20,21),13)))),(16,4)),53),10),(7,(9,6))),3);
	TREE 'Tree 45 from search (criterion: minimize Tree value using character matrix)' = (((((((22,(((5,12),8),(11,2))),((((((((28,((44,45),(18,(19,(24,((25,23),17)))))),(55,50)),((((51,49),((27,26),(47,41))),31),(((1,56),54),52))),48),43),((((29,(39,38)),30),42),(((32,37),35),(((33,46),36),34)))),(40,14)),(15,((20,21),13)))),(16,4)),53),10),(7,(9,6))),3);
	TREE 'Tree 46 from search (criterion: minimize Tree value using character matrix)' = (((((((22,(((5,12),8),(11,2))),((((((((28,((44,45),(18,(19,(24,((25,23),17)))))),((((51,49),((27,26),(47,41))),31),(((1,56),54),52))),(55,50)),48),43),((((29,(39,38)),30),42),(((32,37),35),(((33,46),36),34)))),(40,14)),(15,((20,21),13)))),(16,4)),53),10),(7,(9,6))),3);
	TREE 'Tree 47 from search (criterion: minimize Tree value using character matrix)' = (((((((22,(((5,12),8),(11,2))),(((((((28,(((((51,49),((27,26),(47,41))),31),(((1,56),54),52)),((44,45),(18,(19,(24,((25,23),17))))))),(55,50)),48),43),((((29,(39,38)),30),42),(((32,37),35),(((33,46),36),34)))),(40,14)),(15,((20,21),13)))),(16,4)),53),10),(7,(9,6))),3);
	TREE 'Tree 48 from search (criterion: minimize Tree value using character matrix)' = (((((((22,(((5,12),8),(11,2))),(((((((28,((44,45),(18,(19,(24,((25,23),17)))))),(((((51,49),((27,26),(47,41))),31),(((1,56),54),52)),(55,50))),48),43),((((29,(39,38)),30),42),(((32,37),35),(((33,46),36),34)))),(40,14)),(15,((20,21),13)))),(16,4)),53),10),(7,(9,6))),3);
	TREE 'Tree 49 from search (criterion: minimize Tree value using character matrix)' = (((((((22,(((5,12),8),(11,2))),(((((((28,((44,45),(18,(19,(24,((25,23),17)))))),(55,50)),(((((51,49),((27,26),(47,41))),31),(((1,56),54),52)),48)),43),((((29,(39,38)),30),42),(((32,37),35),(((33,46),36),34)))),(40,14)),(15,((20,21),13)))),(16,4)),53),10),(7,(9,6))),3);
	TREE 'Tree 50 from search (criterion: minimize Tree value using character matrix)' = (((((((22,(((5,12),8),(11,2))),(((((((28,((44,45),(18,(19,(24,((25,23),17)))))),(55,50)),48),(((((51,49),((27,26),(47,41))),31),(((1,56),54),52)),43)),((((29,(39,38)),30),42),(((32,37),35),(((33,46),36),34)))),(40,14)),(15,((20,21),13)))),(16,4)),53),10),(7,(9,6))),3);
	TREE 'Tree 51 from search (criterion: minimize Tree value using character matrix)' = (((((((22,(((5,12),8),(11,2))),((((((((((((1,56),54),(((51,49),((27,26),(47,41))),31)),52),28),((44,45),(18,(19,(24,((25,23),17)))))),(55,50)),48),43),((((29,(39,38)),30),42),(((32,37),35),(((33,46),36),34)))),(40,14)),(15,((20,21),13)))),(16,4)),53),10),(7,(9,6))),3);
	TREE 'Tree 52 from search (criterion: minimize Tree value using character matrix)' = (((((((22,(((5,12),8),(11,2))),((((((((((((1,56),(((51,49),((27,26),(47,41))),31)),54),52),28),((44,45),(18,(19,(24,((25,23),17)))))),(55,50)),48),43),((((29,(39,38)),30),42),(((32,37),35),(((33,46),36),34)))),(40,14)),(15,((20,21),13)))),(16,4)),53),10),(7,(9,6))),3);
	TREE 'Tree 53 from search (criterion: minimize Tree value using character matrix)' = (((((((22,(((5,12),8),(11,2))),((((((((((((1,(((51,49),((27,26),(47,41))),31)),56),54),52),28),((44,45),(18,(19,(24,((25,23),17)))))),(55,50)),48),43),((((29,(39,38)),30),42),(((32,37),35),(((33,46),36),34)))),(40,14)),(15,((20,21),13)))),(16,4)),53),10),(7,(9,6))),3);
	TREE 'Tree 54 from search (criterion: minimize Tree value using character matrix)' = (((((((22,(((5,12),8),(11,2))),(((((((((((1,((((51,49),((27,26),(47,41))),31),56)),54),52),28),((44,45),(18,(19,(24,((25,23),17)))))),(55,50)),48),43),((((29,(39,38)),30),42),(((32,37),35),(((33,46),36),34)))),(40,14)),(15,((20,21),13)))),(16,4)),53),10),(7,(9,6))),3);
	TREE 'Tree 55 from search (criterion: minimize Tree value using character matrix)' = (((((((22,(((5,12),8),(11,2))),(((((((((((1,56),((((51,49),((27,26),(47,41))),31),54)),52),28),((44,45),(18,(19,(24,((25,23),17)))))),(55,50)),48),43),((((29,(39,38)),30),42),(((32,37),35),(((33,46),36),34)))),(40,14)),(15,((20,21),13)))),(16,4)),53),10),(7,(9,6))),3);
	TREE 'Tree 56 from search (criterion: minimize Tree value using character matrix)' = (((((((22,(((5,12),8),(11,2))),(((((((((((1,56),54),((((51,49),((27,26),(47,41))),31),52)),28),((44,45),(18,(19,(24,((25,23),17)))))),(55,50)),48),43),((((29,(39,38)),30),42),(((32,37),35),(((33,46),36),34)))),(40,14)),(15,((20,21),13)))),(16,4)),53),10),(7,(9,6))),3);
	TREE 'Tree 57 from search (criterion: minimize Tree value using character matrix)' = (((((((22,(((5,12),8),(11,2))),((((((((((31,(((1,56),54),52)),((51,49),((27,26),(47,41)))),28),((44,45),(18,(19,(24,((25,23),17)))))),(55,50)),48),43),((((29,(39,38)),30),42),(((32,37),35),(((33,46),36),34)))),(40,14)),(15,((20,21),13)))),(16,4)),53),10),(7,(9,6))),3);
	TREE 'Tree 58 from search (criterion: minimize Tree value using character matrix)' = (((((((22,(((5,12),8),(11,2))),(((((((((31,(((51,49),((27,26),(47,41))),(((1,56),54),52))),28),((44,45),(18,(19,(24,((25,23),17)))))),(55,50)),48),43),((((29,(39,38)),30),42),(((32,37),35),(((33,46),36),34)))),(40,14)),(15,((20,21),13)))),(16,4)),53),10),(7,(9,6))),3);
	TREE 'Tree 59 from search (criterion: minimize Tree value using character matrix)' = (((((((22,(((5,12),8),(11,2))),(((((((((31,((((1,56),54),((51,49),((27,26),(47,41)))),52)),28),((44,45),(18,(19,(24,((25,23),17)))))),(55,50)),48),43),((((29,(39,38)),30),42),(((32,37),35),(((33,46),36),34)))),(40,14)),(15,((20,21),13)))),(16,4)),53),10),(7,(9,6))),3);
	TREE 'Tree 60 from search (criterion: minimize Tree value using character matrix)' = (((((((22,(((5,12),8),(11,2))),(((((((((31,((((1,56),((51,49),((27,26),(47,41)))),54),52)),28),((44,45),(18,(19,(24,((25,23),17)))))),(55,50)),48),43),((((29,(39,38)),30),42),(((32,37),35),(((33,46),36),34)))),(40,14)),(15,((20,21),13)))),(16,4)),53),10),(7,(9,6))),3);
	TREE 'Tree 61 from search (criterion: minimize Tree value using character matrix)' = (((((((22,(((5,12),8),(11,2))),(((((((((31,((((1,((51,49),((27,26),(47,41)))),56),54),52)),28),((44,45),(18,(19,(24,((25,23),17)))))),(55,50)),48),43),((((29,(39,38)),30),42),(((32,37),35),(((33,46),36),34)))),(40,14)),(15,((20,21),13)))),(16,4)),53),10),(7,(9,6))),3);
	TREE 'Tree 62 from search (criterion: minimize Tree value using character matrix)' = (((((((22,(((5,12),8),(11,2))),(((((((((31,(((1,(((51,49),((27,26),(47,41))),56)),54),52)),28),((44,45),(18,(19,(24,((25,23),17)))))),(55,50)),48),43),((((29,(39,38)),30),42),(((32,37),35),(((33,46),36),34)))),(40,14)),(15,((20,21),13)))),(16,4)),53),10),(7,(9,6))),3);
	TREE 'Tree 63 from search (criterion: minimize Tree value using character matrix)' = (((((((22,(((5,12),8),(11,2))),(((((((((31,(((1,56),(((51,49),((27,26),(47,41))),54)),52)),28),((44,45),(18,(19,(24,((25,23),17)))))),(55,50)),48),43),((((29,(39,38)),30),42),(((32,37),35),(((33,46),36),34)))),(40,14)),(15,((20,21),13)))),(16,4)),53),10),(7,(9,6))),3);
	TREE 'Tree 64 from search (criterion: minimize Tree value using character matrix)' = (((((((22,(((5,12),8),(11,2))),(((((((((31,(((1,56),54),(((51,49),((27,26),(47,41))),52))),28),((44,45),(18,(19,(24,((25,23),17)))))),(55,50)),48),43),((((29,(39,38)),30),42),(((32,37),35),(((33,46),36),34)))),(40,14)),(15,((20,21),13)))),(16,4)),53),10),(7,(9,6))),3);
	TREE 'Tree 65 from search (criterion: minimize Tree value using character matrix)' = (((((((22,(((5,12),8),(11,2))),((((((((((((49,((27,26),(47,41))),51),31),(((1,56),54),52)),28),((44,45),(18,(19,(24,((25,23),17)))))),(55,50)),48),43),((((29,(39,38)),30),42),(((32,37),35),(((33,46),36),34)))),(40,14)),(15,((20,21),13)))),(16,4)),53),10),(7,(9,6))),3);
	TREE 'Tree 66 from search (criterion: minimize Tree value using character matrix)' = (((((((22,(((5,12),8),(11,2))),(((((((((((49,(51,((27,26),(47,41)))),31),(((1,56),54),52)),28),((44,45),(18,(19,(24,((25,23),17)))))),(55,50)),48),43),((((29,(39,38)),30),42),(((32,37),35),(((33,46),36),34)))),(40,14)),(15,((20,21),13)))),(16,4)),53),10),(7,(9,6))),3);
	TREE 'Tree 67 from search (criterion: minimize Tree value using character matrix)' = (((((((22,(((5,12),8),(11,2))),((((((((((((51,((27,26),(47,41))),31),(((1,56),54),52)),28),((44,45),(18,(19,(24,((25,23),17)))))),(55,50)),48),43),49),((((29,(39,38)),30),42),(((32,37),35),(((33,46),36),34)))),(40,14)),(15,((20,21),13)))),(16,4)),53),10),(7,(9,6))),3);
	TREE 'Tree 68 from search (criterion: minimize Tree value using character matrix)' = (((((((22,(((5,12),8),(11,2))),((((((((((((51,((27,26),(47,41))),31),(((1,56),54),52)),28),((44,45),(18,(19,(24,((25,23),17)))))),(55,50)),48),49),43),((((29,(39,38)),30),42),(((32,37),35),(((33,46),36),34)))),(40,14)),(15,((20,21),13)))),(16,4)),53),10),(7,(9,6))),3);
	TREE 'Tree 69 from search (criterion: minimize Tree value using character matrix)' = (((((((22,(((5,12),8),(11,2))),((((((((((((51,((27,26),(47,41))),31),(((1,56),54),52)),28),((44,45),(18,(19,(24,((25,23),17)))))),(55,50)),49),48),43),((((29,(39,38)),30),42),(((32,37),35),(((33,46),36),34)))),(40,14)),(15,((20,21),13)))),(16,4)),53),10),(7,(9,6))),3);
	TREE 'Tree 70 from search (criterion: minimize Tree value using character matrix)' = (((((((22,(((5,12),8),(11,2))),((((((((((((51,((27,26),(47,41))),31),(((1,56),54),52)),28),((44,45),(18,(19,(24,((25,23),17)))))),49),(55,50)),48),43),((((29,(39,38)),30),42),(((32,37),35),(((33,46),36),34)))),(40,14)),(15,((20,21),13)))),(16,4)),53),10),(7,(9,6))),3);
	TREE 'Tree 71 from search (criterion: minimize Tree value using character matrix)' = (((((((22,(((5,12),8),(11,2))),((((((((((((51,((27,26),(47,41))),31),(((1,56),54),52)),28),49),((44,45),(18,(19,(24,((25,23),17)))))),(55,50)),48),43),((((29,(39,38)),30),42),(((32,37),35),(((33,46),36),34)))),(40,14)),(15,((20,21),13)))),(16,4)),53),10),(7,(9,6))),3);
	TREE 'Tree 72 from search (criterion: minimize Tree value using character matrix)' = (((((((22,(((5,12),8),(11,2))),((((((((((((51,((27,26),(47,41))),31),(((1,56),54),52)),49),28),((44,45),(18,(19,(24,((25,23),17)))))),(55,50)),48),43),((((29,(39,38)),30),42),(((32,37),35),(((33,46),36),34)))),(40,14)),(15,((20,21),13)))),(16,4)),53),10),(7,(9,6))),3);
	TREE 'Tree 73 from search (criterion: minimize Tree value using character matrix)' = (((((((22,(((5,12),8),(11,2))),((((((((((((51,((27,26),(47,41))),31),49),(((1,56),54),52)),28),((44,45),(18,(19,(24,((25,23),17)))))),(55,50)),48),43),((((29,(39,38)),30),42),(((32,37),35),(((33,46),36),34)))),(40,14)),(15,((20,21),13)))),(16,4)),53),10),(7,(9,6))),3);
	TREE 'Tree 74 from search (criterion: minimize Tree value using character matrix)' = (((((((22,(((5,12),8),(11,2))),(((((((((((51,((27,26),((47,49),41))),31),(((1,56),54),52)),28),((44,45),(18,(19,(24,((25,23),17)))))),(55,50)),48),43),((((29,(39,38)),30),42),(((32,37),35),(((33,46),36),34)))),(40,14)),(15,((20,21),13)))),(16,4)),53),10),(7,(9,6))),3);
	TREE 'Tree 75 from search (criterion: minimize Tree value using character matrix)' = (((((((22,(((5,12),8),(11,2))),(((((((((((51,((27,26),(47,41))),(49,31)),(((1,56),54),52)),28),((44,45),(18,(19,(24,((25,23),17)))))),(55,50)),48),43),((((29,(39,38)),30),42),(((32,37),35),(((33,46),36),34)))),(40,14)),(15,((20,21),13)))),(16,4)),53),10),(7,(9,6))),3);
	TREE 'Tree 76 from search (criterion: minimize Tree value using character matrix)' = (((((((22,(((5,12),8),(11,2))),(((((((((((51,((27,26),(47,41))),31),(49,(((1,56),54),52))),28),((44,45),(18,(19,(24,((25,23),17)))))),(55,50)),48),43),((((29,(39,38)),30),42),(((32,37),35),(((33,46),36),34)))),(40,14)),(15,((20,21),13)))),(16,4)),53),10),(7,(9,6))),3);
	TREE 'Tree 77 from search (criterion: minimize Tree value using character matrix)' = (((((((22,(((5,12),8),(11,2))),(((((((((((51,((27,26),(47,41))),31),((((1,56),54),49),52)),28),((44,45),(18,(19,(24,((25,23),17)))))),(55,50)),48),43),((((29,(39,38)),30),42),(((32,37),35),(((33,46),36),34)))),(40,14)),(15,((20,21),13)))),(16,4)),53),10),(7,(9,6))),3);
	TREE 'Tree 78 from search (criterion: minimize Tree value using character matrix)' = (((((((22,(((5,12),8),(11,2))),(((((((((((51,((27,26),(47,41))),31),((((1,56),49),54),52)),28),((44,45),(18,(19,(24,((25,23),17)))))),(55,50)),48),43),((((29,(39,38)),30),42),(((32,37),35),(((33,46),36),34)))),(40,14)),(15,((20,21),13)))),(16,4)),53),10),(7,(9,6))),3);
	TREE 'Tree 79 from search (criterion: minimize Tree value using character matrix)' = (((((((22,(((5,12),8),(11,2))),(((((((((((51,((27,26),(47,41))),31),((((1,49),56),54),52)),28),((44,45),(18,(19,(24,((25,23),17)))))),(55,50)),48),43),((((29,(39,38)),30),42),(((32,37),35),(((33,46),36),34)))),(40,14)),(15,((20,21),13)))),(16,4)),53),10),(7,(9,6))),3);
	TREE 'Tree 80 from search (criterion: minimize Tree value using character matrix)' = (((((((22,(((5,12),8),(11,2))),(((((((((((51,((27,26),(47,41))),31),(((1,(49,56)),54),52)),28),((44,45),(18,(19,(24,((25,23),17)))))),(55,50)),48),43),((((29,(39,38)),30),42),(((32,37),35),(((33,46),36),34)))),(40,14)),(15,((20,21),13)))),(16,4)),53),10),(7,(9,6))),3);
	TREE 'Tree 81 from search (criterion: minimize Tree value using character matrix)' = (((((((22,(((5,12),8),(11,2))),(((((((((((51,((27,26),(47,41))),31),(((1,56),(49,54)),52)),28),((44,45),(18,(19,(24,((25,23),17)))))),(55,50)),48),43),((((29,(39,38)),30),42),(((32,37),35),(((33,46),36),34)))),(40,14)),(15,((20,21),13)))),(16,4)),53),10),(7,(9,6))),3);
	TREE 'Tree 82 from search (criterion: minimize Tree value using character matrix)' = (((((((22,(((5,12),8),(11,2))),(((((((((((51,((27,26),(47,41))),31),(((1,56),54),(49,52))),28),((44,45),(18,(19,(24,((25,23),17)))))),(55,50)),48),43),((((29,(39,38)),30),42),(((32,37),35),(((33,46),36),34)))),(40,14)),(15,((20,21),13)))),(16,4)),53),10),(7,(9,6))),3);
	TREE 'Tree 83 from search (criterion: minimize Tree value using character matrix)' = (((((((22,(((5,12),8),(11,2))),(((((((((((51,((27,26),(47,41))),31),(((1,56),54),52)),(49,28)),((44,45),(18,(19,(24,((25,23),17)))))),(55,50)),48),43),((((29,(39,38)),30),42),(((32,37),35),(((33,46),36),34)))),(40,14)),(15,((20,21),13)))),(16,4)),53),10),(7,(9,6))),3);
	TREE 'Tree 84 from search (criterion: minimize Tree value using character matrix)' = (((((((22,(((5,12),8),(11,2))),(((((((((((51,((27,26),(47,41))),31),(((1,56),54),52)),28),(49,((44,45),(18,(19,(24,((25,23),17))))))),(55,50)),48),43),((((29,(39,38)),30),42),(((32,37),35),(((33,46),36),34)))),(40,14)),(15,((20,21),13)))),(16,4)),53),10),(7,(9,6))),3);
	TREE 'Tree 85 from search (criterion: minimize Tree value using character matrix)' = (((((((22,(((5,12),8),(11,2))),(((((((((((51,((27,26),(47,41))),31),(((1,56),54),52)),28),(((44,45),49),(18,(19,(24,((25,23),17)))))),(55,50)),48),43),((((29,(39,38)),30),42),(((32,37),35),(((33,46),36),34)))),(40,14)),(15,((20,21),13)))),(16,4)),53),10),(7,(9,6))),3);
	TREE 'Tree 86 from search (criterion: minimize Tree value using character matrix)' = (((((((22,(((5,12),8),(11,2))),(((((((((((51,((27,26),(47,41))),31),(((1,56),54),52)),28),((44,45),(49,(18,(19,(24,((25,23),17))))))),(55,50)),48),43),((((29,(39,38)),30),42),(((32,37),35),(((33,46),36),34)))),(40,14)),(15,((20,21),13)))),(16,4)),53),10),(7,(9,6))),3);
	TREE 'Tree 87 from search (criterion: minimize Tree value using character matrix)' = (((((((22,(((5,12),8),(11,2))),(((((((((((51,((27,26),(47,41))),31),(((1,56),54),52)),28),((44,45),(18,(19,(24,((25,23),17)))))),(49,(55,50))),48),43),((((29,(39,38)),30),42),(((32,37),35),(((33,46),36),34)))),(40,14)),(15,((20,21),13)))),(16,4)),53),10),(7,(9,6))),3);
	TREE 'Tree 88 from search (criterion: minimize Tree value using character matrix)' = (((((((22,(((5,12),8),(11,2))),(((((((((((51,((27,26),(47,41))),31),(((1,56),54),52)),28),((44,45),(18,(19,(24,((25,23),17)))))),(55,50)),(49,48)),43),((((29,(39,38)),30),42),(((32,37),35),(((33,46),36),34)))),(40,14)),(15,((20,21),13)))),(16,4)),53),10),(7,(9,6))),3);
	TREE 'Tree 89 from search (criterion: minimize Tree value using character matrix)' = (((((((22,(((5,12),8),(11,2))),(((((((((((51,((27,26),(47,41))),31),(((1,56),54),52)),28),((44,45),(18,(19,(24,((25,23),17)))))),(55,50)),48),(49,43)),((((29,(39,38)),30),42),(((32,37),35),(((33,46),36),34)))),(40,14)),(15,((20,21),13)))),(16,4)),53),10),(7,(9,6))),3);
	TREE 'Tree 90 from search (criterion: minimize Tree value using character matrix)' = (((((((22,(((5,12),8),(11,2))),((((((((((((51,49),((47,(27,26)),41)),31),(((1,56),54),52)),28),((44,45),(18,(19,(24,((25,23),17)))))),(55,50)),48),43),((((29,(39,38)),30),42),(((32,37),35),(((33,46),36),34)))),(40,14)),(15,((20,21),13)))),(16,4)),53),10),(7,(9,6))),3);
	TREE 'Tree 91 from search (criterion: minimize Tree value using character matrix)' = (((((((22,(((5,12),8),(11,2))),((((((((((((51,49),(47,((27,26),41))),31),(((1,56),54),52)),28),((44,45),(18,(19,(24,((25,23),17)))))),(55,50)),48),43),((((29,(39,38)),30),42),(((32,37),35),(((33,46),36),34)))),(40,14)),(15,((20,21),13)))),(16,4)),53),10),(7,(9,6))),3);
	TREE 'Tree 92 from search (criterion: minimize Tree value using character matrix)' = (((((((22,(((5,12),8),(11,2))),((((((((((((51,49),(27,(47,41))),31),(((1,56),54),52)),28),((44,45),(18,(19,(24,((25,23),17)))))),(55,50)),48),(26,43)),((((29,(39,38)),30),42),(((32,37),35),(((33,46),36),34)))),(40,14)),(15,((20,21),13)))),(16,4)),53),10),(7,(9,6))),3);
	TREE 'Tree 93 from search (criterion: minimize Tree value using character matrix)' = (((((((22,(((5,12),8),(11,2))),((((((((((((51,(47,49)),((27,26),41)),31),(((1,56),54),52)),28),((44,45),(18,(19,(24,((25,23),17)))))),(55,50)),48),43),((((29,(39,38)),30),42),(((32,37),35),(((33,46),36),34)))),(40,14)),(15,((20,21),13)))),(16,4)),53),10),(7,(9,6))),3);
	TREE 'Tree 94 from search (criterion: minimize Tree value using character matrix)' = (((((((22,(((5,12),8),(11,2))),((((((((((((51,49),((27,26),41)),31),(((1,56),54),52)),28),((44,45),(18,(19,(24,((25,23),17)))))),(55,50)),(47,48)),43),((((29,(39,38)),30),42),(((32,37),35),(((33,46),36),34)))),(40,14)),(15,((20,21),13)))),(16,4)),53),10),(7,(9,6))),3);
	TREE 'Tree 95 from search (criterion: minimize Tree value using character matrix)' = (((((((22,(((5,12),8),(11,2))),(((((((((((51,49),((27,26),(47,41))),((((1,56),54),31),52)),28),((44,45),(18,(19,(24,((25,23),17)))))),(55,50)),48),43),((((29,(39,38)),30),42),(((32,37),35),(((33,46),36),34)))),(40,14)),(15,((20,21),13)))),(16,4)),53),10),(7,(9,6))),3);
	TREE 'Tree 96 from search (criterion: minimize Tree value using character matrix)' = (((((((22,(((5,12),8),(11,2))),(((((((((((51,49),((27,26),(47,41))),((((1,56),31),54),52)),28),((44,45),(18,(19,(24,((25,23),17)))))),(55,50)),48),43),((((29,(39,38)),30),42),(((32,37),35),(((33,46),36),34)))),(40,14)),(15,((20,21),13)))),(16,4)),53),10),(7,(9,6))),3);
	TREE 'Tree 97 from search (criterion: minimize Tree value using character matrix)' = (((((((22,(((5,12),8),(11,2))),(((((((((((51,49),((27,26),(47,41))),((((1,31),56),54),52)),28),((44,45),(18,(19,(24,((25,23),17)))))),(55,50)),48),43),((((29,(39,38)),30),42),(((32,37),35),(((33,46),36),34)))),(40,14)),(15,((20,21),13)))),(16,4)),53),10),(7,(9,6))),3);
	TREE 'Tree 98 from search (criterion: minimize Tree value using character matrix)' = (((((((22,(((5,12),8),(11,2))),(((((((((((51,49),((27,26),(47,41))),(((1,(31,56)),54),52)),28),((44,45),(18,(19,(24,((25,23),17)))))),(55,50)),48),43),((((29,(39,38)),30),42),(((32,37),35),(((33,46),36),34)))),(40,14)),(15,((20,21),13)))),(16,4)),53),10),(7,(9,6))),3);
	TREE 'Tree 99 from search (criterion: minimize Tree value using character matrix)' = (((((((22,(((5,12),8),(11,2))),(((((((((((51,49),((27,26),(47,41))),(((1,56),(31,54)),52)),28),((44,45),(18,(19,(24,((25,23),17)))))),(55,50)),48),43),((((29,(39,38)),30),42),(((32,37),35),(((33,46),36),34)))),(40,14)),(15,((20,21),13)))),(16,4)),53),10),(7,(9,6))),3);
	TREE 'Tree 100 from search (criterion: minimize Tree value using character matrix)' = (((((((22,(((5,12),8),(11,2))),(((((((((((51,49),((27,26),(47,41))),(((1,56),54),(31,52))),28),((44,45),(18,(19,(24,((25,23),17)))))),(55,50)),48),43),((((29,(39,38)),30),42),(((32,37),35),(((33,46),36),34)))),(40,14)),(15,((20,21),13)))),(16,4)),53),10),(7,(9,6))),3);

END;


BEGIN TREES[!'Parameters: Majority-Rule Consensus of trees from Stored Trees'];
	Title Consensus_Tree;
	ID 015eb33ba8b34;
	LINK Taxa = Unpaid_seller;
	TRANSLATE
[0] 		1 NLWNH1809_,
[1] 		2 NLBW1838,
[2] 		3 NLWvK1838,
[3] 		4 NLBW1992,
[4] 		5 FRCC1804,
[5] 		6 FRCdC1807,
[6] 		7 FRCdC2001,
[7] 		8 BEHyp1851,
[8] 		9 BEWvK1851,
[9] 		10 LUCdC2013,
[10] 		11 ITCC1942,
[11] 		12 ROCC1864,
[12] 		13 ROCC2011,
[13] 		14 BGLOC1892,
[14] 		15 BGLOC1951,
[15] 		16 LTCC2000,
[16] 		17 HRCO2006,
[17] 		18 NOMC1994,
[18] 		19 UKSGA1893,
[19] 		20 QCCC1866,
[20] 		21 QCCC1994,
[21] 		22 LACC1825,
[22] 		23 USUCC1952,
[23] 		24 CNCL1999,
[24] 		25 JPBA2004,
[25] 		26 SA1880,
[26] 		27 SAIns1396,
[27] 		28 DDRZGB1976,
[28] 		29 D150,
[29] 		30 INST533,
[30] 		31 PRAvB1389,
[31] 		32 STThol1366,
[32] 		33 STZzee1429,
[33] 		34 STZzee1485,
[34] 		35 STDBr1445,
[35] 		36 STZld1495,
[36] 		37 STVrn1519,
[37] 		38 STOam1618,
[38] 		39 STGro1701,
[39] 		40 STAms1530,
[40] 		41 STAms1626,
[41] 		42 STAms1658,
[42] 		43 STRdm1702,
[43] 		44 STZwo1794,
[44] 		45 STRmd1620,
[45] 		46 STAwn1545,
[46] 		47 STAwn1582,
[47] 		48 STAwn1608,
[48] 		49 STDne1577,
[49] 		50 STPar1580,
[50] 		51 PaPa1306,
[51] 		52 STMrs1253,
[52] 		53 STPsa1161,
[53] 		54 STSna1262,
[54] 		55 STSri1316,
[55] 		56 STAbg1288;
	TREE 'Majority-Rule Consensus of 100 trees from Trees stored in block "Trees from Mesquite''s heuristic search"' = (3,((7,(6,9)[%consensusFrequency = 1 ])[%consensusFrequency = 1 ],(10,(53,((4,16)[%consensusFrequency = 1 ],((22,((2,11)[%consensusFrequency = 0.98 ],(8,(5,12)[%consensusFrequency = 1 ])[%consensusFrequency = 1 ])[%consensusFrequency = 1 ])[%consensusFrequency = 1 ],((15,(13,(20,21)[%consensusFrequency = 1 ])[%consensusFrequency = 0.97 ])[%consensusFrequency = 0.95 ],((14,40)[%consensusFrequency = 0.98 ],(((42,(30,(29,(38,39)[%consensusFrequency = 1 ])[%consensusFrequency = 1 ])[%consensusFrequency = 0.99 ])[%consensusFrequency = 0.99 ],((35,(32,37)[%consensusFrequency = 1 ])[%consensusFrequency = 1 ],(34,(36,(33,46)[%consensusFrequency = 1 ])[%consensusFrequency = 1 ])[%consensusFrequency = 0.96 ])[%consensusFrequency = 0.92 ])[%consensusFrequency = 0.87 ],(43,(48,((50,55)[%consensusFrequency = 1 ],(((44,45)[%consensusFrequency = 1 ],(18,(19,(24,(17,(23,25)[%consensusFrequency = 1 ])[%consensusFrequency = 1 ])[%consensusFrequency = 1 ])[%consensusFrequency = 1 ])[%consensusFrequency = 1 ])[%consensusFrequency = 0.98 ],(28,((52,(54,(1,56)[%consensusFrequency = 0.92 ])[%consensusFrequency = 0.84 ])[%consensusFrequency = 0.76 ],(31,((49,51)[%consensusFrequency = 0.74 ],((26,27)[%consensusFrequency = 0.99 ],(41,47)[%consensusFrequency = 0.95 ])[%consensusFrequency = 0.96 ])[%consensusFrequency = 0.76 ])[%consensusFrequency = 0.64 ])[%consensusFrequency = 0.86 ])[%consensusFrequency = 0.8 ])[%consensusFrequency = 0.8 ])[%consensusFrequency = 0.82 ])[%consensusFrequency = 0.89 ])[%consensusFrequency = 0.92 ])[%consensusFrequency = 0.99 ])[%consensusFrequency = 0.98 ])[%consensusFrequency = 0.99 ])[%consensusFrequency = 0.99 ])[%consensusFrequency = 0.99 ])[%consensusFrequency = 0.99 ])[%consensusFrequency = 0.95 ])[%consensusFrequency = 0.95 ])[%consensusFrequency = 1 ] [% ] [%  setBetweenDouble = consensusFrequency ];

END;


BEGIN TREES[!'Parameters: Trees "Consensus Tree" from file datafile1.nex'];
	Title Stored_Trees;
	ID 015eb34dc8175;
	LINK Taxa = Unpaid_seller;
	TRANSLATE
[0] 		1 NLWNH1809_,
[1] 		2 NLBW1838,
[2] 		3 NLWvK1838,
[3] 		4 NLBW1992,
[4] 		5 FRCC1804,
[5] 		6 FRCdC1807,
[6] 		7 FRCdC2001,
[7] 		8 BEHyp1851,
[8] 		9 BEWvK1851,
[9] 		10 LUCdC2013,
[10] 		11 ITCC1942,
[11] 		12 ROCC1864,
[12] 		13 ROCC2011,
[13] 		14 BGLOC1892,
[14] 		15 BGLOC1951,
[15] 		16 LTCC2000,
[16] 		17 HRCO2006,
[17] 		18 NOMC1994,
[18] 		19 UKSGA1893,
[19] 		20 QCCC1866,
[20] 		21 QCCC1994,
[21] 		22 LACC1825,
[22] 		23 USUCC1952,
[23] 		24 CNCL1999,
[24] 		25 JPBA2004,
[25] 		26 SA1880,
[26] 		27 SAIns1396,
[27] 		28 DDRZGB1976,
[28] 		29 D150,
[29] 		30 INST533,
[30] 		31 PRAvB1389,
[31] 		32 STThol1366,
[32] 		33 STZzee1429,
[33] 		34 STZzee1485,
[34] 		35 STDBr1445,
[35] 		36 STZld1495,
[36] 		37 STVrn1519,
[37] 		38 STOam1618,
[38] 		39 STGro1701,
[39] 		40 STAms1530,
[40] 		41 STAms1626,
[41] 		42 STAms1658,
[42] 		43 STRdm1702,
[43] 		44 STZwo1794,
[44] 		45 STRmd1620,
[45] 		46 STAwn1545,
[46] 		47 STAwn1582,
[47] 		48 STAwn1608,
[48] 		49 STDne1577,
[49] 		50 STPar1580,
[50] 		51 PaPa1306,
[51] 		52 STMrs1253,
[52] 		53 STPsa1161,
[53] 		54 STSna1262,
[54] 		55 STSri1316,
[55] 		56 STAbg1288;
	TREE 'Majority-Rule Consensus of 100 trees from Trees stored in block "Trees from Mesquite''s heuristic search"' = (3,((7,(6,9)[%consensusFrequency = 1 ])[%consensusFrequency = 1 ],(10,(53,((4,16)[%consensusFrequency = 1 ],((22,((2,11)[%consensusFrequency = 0.98 ],(8,(5,12)[%consensusFrequency = 1 ])[%consensusFrequency = 1 ])[%consensusFrequency = 1 ])[%consensusFrequency = 1 ],((15,(13,(20,21)[%consensusFrequency = 1 ])[%consensusFrequency = 0.97 ])[%consensusFrequency = 0.95 ],((14,40)[%consensusFrequency = 0.98 ],(((42,(30,(29,(38,39)[%consensusFrequency = 1 ])[%consensusFrequency = 1 ])[%consensusFrequency = 0.99 ])[%consensusFrequency = 0.99 ],((35,(32,37)[%consensusFrequency = 1 ])[%consensusFrequency = 1 ],(34,(36,(33,46)[%consensusFrequency = 1 ])[%consensusFrequency = 1 ])[%consensusFrequency = 0.96 ])[%consensusFrequency = 0.92 ])[%consensusFrequency = 0.87 ],(43,(48,((50,55)[%consensusFrequency = 1 ],(((44,45)[%consensusFrequency = 1 ],(18,(19,(24,(17,(23,25)[%consensusFrequency = 1 ])[%consensusFrequency = 1 ])[%consensusFrequency = 1 ])[%consensusFrequency = 1 ])[%consensusFrequency = 1 ])[%consensusFrequency = 0.98 ],(28,((52,(54,(1,56)[%consensusFrequency = 0.92 ])[%consensusFrequency = 0.84 ])[%consensusFrequency = 0.76 ],(31,((49,51)[%consensusFrequency = 0.74 ],((26,27)[%consensusFrequency = 0.99 ],(41,47)[%consensusFrequency = 0.95 ])[%consensusFrequency = 0.96 ])[%consensusFrequency = 0.76 ])[%consensusFrequency = 0.64 ])[%consensusFrequency = 0.86 ])[%consensusFrequency = 0.8 ])[%consensusFrequency = 0.8 ])[%consensusFrequency = 0.82 ])[%consensusFrequency = 0.89 ])[%consensusFrequency = 0.92 ])[%consensusFrequency = 0.99 ])[%consensusFrequency = 0.98 ])[%consensusFrequency = 0.99 ])[%consensusFrequency = 0.99 ])[%consensusFrequency = 0.99 ])[%consensusFrequency = 0.99 ])[%consensusFrequency = 0.95 ])[%consensusFrequency = 0.95 ])[%consensusFrequency = 1 ] [% ] [%  setBetweenDouble = consensusFrequency ];

END;


BEGIN TREES[!'Parameters: Tree search criterion: minimize Tree value using character matrix'];
	Title 'Trees from Mesquite''s heuristic search';
	ID 015ec9e081f77;
	LINK Taxa = Unpaid_seller;
	TRANSLATE
[0] 		1 NLWNH1809_,
[1] 		2 NLBW1838,
[2] 		3 NLWvK1838,
[3] 		4 NLBW1992,
[4] 		5 FRCC1804,
[5] 		6 FRCdC1807,
[6] 		7 FRCdC2001,
[7] 		8 BEHyp1851,
[8] 		9 BEWvK1851,
[9] 		10 LUCdC2013,
[10] 		11 ITCC1942,
[11] 		12 ROCC1864,
[12] 		13 ROCC2011,
[13] 		14 BGLOC1892,
[14] 		15 BGLOC1951,
[15] 		16 LTCC2000,
[16] 		17 HRCO2006,
[17] 		18 NOMC1994,
[18] 		19 UKSGA1893,
[19] 		20 QCCC1866,
[20] 		21 QCCC1994,
[21] 		22 LACC1825,
[22] 		23 USUCC1952,
[23] 		24 CNCL1999,
[24] 		25 JPBA2004,
[25] 		26 SA1880,
[26] 		27 SAIns1396,
[27] 		28 DDRZGB1976,
[28] 		29 D150,
[29] 		30 INST533,
[30] 		31 PRAvB1389,
[31] 		32 STThol1366,
[32] 		33 STZzee1429,
[33] 		34 STZzee1485,
[34] 		35 STDBr1445,
[35] 		36 STZld1495,
[36] 		37 STVrn1519,
[37] 		38 STOam1618,
[38] 		39 STGro1701,
[39] 		40 STAms1530,
[40] 		41 STAms1626,
[41] 		42 STAms1658,
[42] 		43 STRdm1702,
[43] 		44 STZwo1794,
[44] 		45 STRmd1620,
[45] 		46 STAwn1545,
[46] 		47 STAwn1582,
[47] 		48 STAwn1608,
[48] 		49 STDne1577,
[49] 		50 STPar1580,
[50] 		51 PaPa1306,
[51] 		52 STMrs1253,
[52] 		53 STPsa1161,
[53] 		54 STSna1262,
[54] 		55 STSri1316,
[55] 		56 STAbg1288;
	TREE 'Tree 1 from search (criterion: minimize Tree value using character matrix)' = (((((((22,(((5,12),8),(11,2))),((((((((((((51,49),((27,26),(47,41))),31),(((1,56),54),52)),28),((44,45),(18,(19,(24,((25,23),17)))))),(55,50)),48),43),((((29,(39,38)),30),42),(((32,37),35),(((33,46),36),34)))),(40,14)),(15,((20,21),13)))),(16,4)),53),10),(7,(9,6))),3);
	TREE 'Tree 2 from search (criterion: minimize Tree value using character matrix)' = (((7,(9,6)),3),(((((22,(((5,12),8),(11,2))),((((((((((((51,49),((27,26),(47,41))),31),(((1,56),54),52)),28),((44,45),(18,(19,(24,((25,23),17)))))),(55,50)),48),43),((((29,(39,38)),30),42),(((32,37),35),(((33,46),36),34)))),(40,14)),(15,((20,21),13)))),(16,4)),53),10));
	TREE 'Tree 3 from search (criterion: minimize Tree value using character matrix)' = ((7,(9,6)),((((((22,(((5,12),8),(11,2))),((((((((((((51,49),((27,26),(47,41))),31),(((1,56),54),52)),28),((44,45),(18,(19,(24,((25,23),17)))))),(55,50)),48),43),((((29,(39,38)),30),42),(((32,37),35),(((33,46),36),34)))),(40,14)),(15,((20,21),13)))),(16,4)),53),10),3));
	TREE 'Tree 4 from search (criterion: minimize Tree value using character matrix)' = (((10,(7,(9,6))),3),((((22,(((5,12),8),(11,2))),((((((((((((51,49),((27,26),(47,41))),31),(((1,56),54),52)),28),((44,45),(18,(19,(24,((25,23),17)))))),(55,50)),48),43),((((29,(39,38)),30),42),(((32,37),35),(((33,46),36),34)))),(40,14)),(15,((20,21),13)))),(16,4)),53));
	TREE 'Tree 5 from search (criterion: minimize Tree value using character matrix)' = (((10,(7,(9,6))),((((22,(((5,12),8),(11,2))),((((((((((((51,49),((27,26),(47,41))),31),(((1,56),54),52)),28),((44,45),(18,(19,(24,((25,23),17)))))),(55,50)),48),43),((((29,(39,38)),30),42),(((32,37),35),(((33,46),36),34)))),(40,14)),(15,((20,21),13)))),(16,4)),53)),3);
	TREE 'Tree 6 from search (criterion: minimize Tree value using character matrix)' = ((10,(((((22,(((5,12),8),(11,2))),((((((((((((51,49),((27,26),(47,41))),31),(((1,56),54),52)),28),((44,45),(18,(19,(24,((25,23),17)))))),(55,50)),48),43),((((29,(39,38)),30),42),(((32,37),35),(((33,46),36),34)))),(40,14)),(15,((20,21),13)))),(16,4)),53),(7,(9,6)))),3);
	TREE 'Tree 7 from search (criterion: minimize Tree value using character matrix)' = ((10,(7,(9,6))),(((((22,(((5,12),8),(11,2))),((((((((((((51,49),((27,26),(47,41))),31),(((1,56),54),52)),28),((44,45),(18,(19,(24,((25,23),17)))))),(55,50)),48),43),((((29,(39,38)),30),42),(((32,37),35),(((33,46),36),34)))),(40,14)),(15,((20,21),13)))),(16,4)),53),3));
	TREE 'Tree 8 from search (criterion: minimize Tree value using character matrix)' = (((((((22,((11,((5,12),8)),2)),((((((((((((51,49),((27,26),(47,41))),31),(((1,56),54),52)),28),((44,45),(18,(19,(24,((25,23),17)))))),(55,50)),48),43),((((29,(39,38)),30),42),(((32,37),35),(((33,46),36),34)))),(40,14)),(15,((20,21),13)))),(16,4)),53),10),(7,(9,6))),3);
	TREE 'Tree 9 from search (criterion: minimize Tree value using character matrix)' = (((((((22,(11,(((5,12),8),2))),((((((((((((51,49),((27,26),(47,41))),31),(((1,56),54),52)),28),((44,45),(18,(19,(24,((25,23),17)))))),(55,50)),48),43),((((29,(39,38)),30),42),(((32,37),35),(((33,46),36),34)))),(40,14)),(15,((20,21),13)))),(16,4)),53),10),(7,(9,6))),3);
	TREE 'Tree 10 from search (criterion: minimize Tree value using character matrix)' = (((((((22,(((5,12),8),(11,2))),((15,(((((((((((51,49),((27,26),(47,41))),31),(((1,56),54),52)),28),((44,45),(18,(19,(24,((25,23),17)))))),(55,50)),48),43),((((29,(39,38)),30),42),(((32,37),35),(((33,46),36),34)))),(40,14))),((20,21),13))),(16,4)),53),10),(7,(9,6))),3);
	TREE 'Tree 11 from search (criterion: minimize Tree value using character matrix)' = (((((((22,(((5,12),8),(11,2))),(15,((((((((((((51,49),((27,26),(47,41))),31),(((1,56),54),52)),28),((44,45),(18,(19,(24,((25,23),17)))))),(55,50)),48),43),((((29,(39,38)),30),42),(((32,37),35),(((33,46),36),34)))),(40,14)),((20,21),13)))),(16,4)),53),10),(7,(9,6))),3);
	TREE 'Tree 12 from search (criterion: minimize Tree value using character matrix)' = (((((((22,(((5,12),8),(11,2))),(15,(((20,21),(((((((((((51,49),((27,26),(47,41))),31),(((1,56),54),52)),28),((44,45),(18,(19,(24,((25,23),17)))))),(55,50)),48),43),((((29,(39,38)),30),42),(((32,37),35),(((33,46),36),34)))),(40,14))),13))),(16,4)),53),10),(7,(9,6))),3);
	TREE 'Tree 13 from search (criterion: minimize Tree value using character matrix)' = (((((((22,(((5,12),8),(11,2))),(15,((20,21),((((((((((((51,49),((27,26),(47,41))),31),(((1,56),54),52)),28),((44,45),(18,(19,(24,((25,23),17)))))),(55,50)),48),43),((((29,(39,38)),30),42),(((32,37),35),(((33,46),36),34)))),(40,14)),13)))),(16,4)),53),10),(7,(9,6))),3);
	TREE 'Tree 14 from search (criterion: minimize Tree value using character matrix)' = (((((((22,(((5,12),8),(11,2))),(((40,((((((((((51,49),((27,26),(47,41))),31),(((1,56),54),52)),28),((44,45),(18,(19,(24,((25,23),17)))))),(55,50)),48),43),((((29,(39,38)),30),42),(((32,37),35),(((33,46),36),34))))),14),(15,((20,21),13)))),(16,4)),53),10),(7,(9,6))),3);
	TREE 'Tree 15 from search (criterion: minimize Tree value using character matrix)' = (((((((22,(((5,12),8),(11,2))),((40,(((((((((((51,49),((27,26),(47,41))),31),(((1,56),54),52)),28),((44,45),(18,(19,(24,((25,23),17)))))),(55,50)),48),43),((((29,(39,38)),30),42),(((32,37),35),(((33,46),36),34)))),14)),(15,((20,21),13)))),(16,4)),53),10),(7,(9,6))),3);
	TREE 'Tree 16 from search (criterion: minimize Tree value using character matrix)' = (((((((22,(((5,12),8),(11,2))),((40,14),(15,(((20,21),((((((((((51,49),((27,26),(47,41))),31),(((1,56),54),52)),28),((44,45),(18,(19,(24,((25,23),17)))))),(55,50)),48),43),((((29,(39,38)),30),42),(((32,37),35),(((33,46),36),34))))),13)))),(16,4)),53),10),(7,(9,6))),3);
	TREE 'Tree 17 from search (criterion: minimize Tree value using character matrix)' = (((((((22,(((5,12),8),(11,2))),(((((((29,(39,38)),30),42),(((((((((51,49),((27,26),(47,41))),31),(((1,56),54),52)),28),((44,45),(18,(19,(24,((25,23),17)))))),(55,50)),48),43)),(((32,37),35),(((33,46),36),34))),(40,14)),(15,((20,21),13)))),(16,4)),53),10),(7,(9,6))),3);
	TREE 'Tree 18 from search (criterion: minimize Tree value using character matrix)' = (((((((22,(((5,12),8),(11,2))),((((((29,(39,38)),30),42),((((((((((51,49),((27,26),(47,41))),31),(((1,56),54),52)),28),((44,45),(18,(19,(24,((25,23),17)))))),(55,50)),48),43),(((32,37),35),(((33,46),36),34)))),(40,14)),(15,((20,21),13)))),(16,4)),53),10),(7,(9,6))),3);
	TREE 'Tree 19 from search (criterion: minimize Tree value using character matrix)' = (((((((22,(((5,12),8),(11,2))),((((((29,(39,38)),30),42),((((32,37),35),(((((((((51,49),((27,26),(47,41))),31),(((1,56),54),52)),28),((44,45),(18,(19,(24,((25,23),17)))))),(55,50)),48),43)),(((33,46),36),34))),(40,14)),(15,((20,21),13)))),(16,4)),53),10),(7,(9,6))),3);
	TREE 'Tree 20 from search (criterion: minimize Tree value using character matrix)' = (((((((22,(((5,12),8),(11,2))),((((((29,(39,38)),30),42),(((32,37),35),((((((((((51,49),((27,26),(47,41))),31),(((1,56),54),52)),28),((44,45),(18,(19,(24,((25,23),17)))))),(55,50)),48),43),(((33,46),36),34)))),(40,14)),(15,((20,21),13)))),(16,4)),53),10),(7,(9,6))),3);
	TREE 'Tree 21 from search (criterion: minimize Tree value using character matrix)' = (((((((22,(((5,12),8),(11,2))),((((((29,(39,38)),30),42),(((32,37),35),((((33,46),36),(((((((((51,49),((27,26),(47,41))),31),(((1,56),54),52)),28),((44,45),(18,(19,(24,((25,23),17)))))),(55,50)),48),43)),34))),(40,14)),(15,((20,21),13)))),(16,4)),53),10),(7,(9,6))),3);
	TREE 'Tree 22 from search (criterion: minimize Tree value using character matrix)' = (((((((22,(((5,12),8),(11,2))),((((((29,(39,38)),30),42),(((32,37),35),(((33,46),36),((((((((((51,49),((27,26),(47,41))),31),(((1,56),54),52)),28),((44,45),(18,(19,(24,((25,23),17)))))),(55,50)),48),43),34)))),(40,14)),(15,((20,21),13)))),(16,4)),53),10),(7,(9,6))),3);
	TREE 'Tree 23 from search (criterion: minimize Tree value using character matrix)' = (((((((22,(((5,12),8),(11,2))),((((43,((((29,(39,38)),30),42),(((32,37),35),(((33,46),36),34)))),((((((((51,49),((27,26),(47,41))),31),(((1,56),54),52)),28),((44,45),(18,(19,(24,((25,23),17)))))),(55,50)),48)),(40,14)),(15,((20,21),13)))),(16,4)),53),10),(7,(9,6))),3);
	TREE 'Tree 24 from search (criterion: minimize Tree value using character matrix)' = (((((((22,(((5,12),8),(11,2))),(((43,(((((((((51,49),((27,26),(47,41))),31),(((1,56),54),52)),28),((44,45),(18,(19,(24,((25,23),17)))))),(55,50)),48),((((29,(39,38)),30),42),(((32,37),35),(((33,46),36),34))))),(40,14)),(15,((20,21),13)))),(16,4)),53),10),(7,(9,6))),3);
	TREE 'Tree 25 from search (criterion: minimize Tree value using character matrix)' = (((((((22,(((5,12),8),(11,2))),(((43,(((((29,(39,38)),30),42),((((((((51,49),((27,26),(47,41))),31),(((1,56),54),52)),28),((44,45),(18,(19,(24,((25,23),17)))))),(55,50)),48)),(((32,37),35),(((33,46),36),34)))),(40,14)),(15,((20,21),13)))),(16,4)),53),10),(7,(9,6))),3);
	TREE 'Tree 26 from search (criterion: minimize Tree value using character matrix)' = (((((((22,(((5,12),8),(11,2))),(((43,((((29,(39,38)),30),42),(((((((((51,49),((27,26),(47,41))),31),(((1,56),54),52)),28),((44,45),(18,(19,(24,((25,23),17)))))),(55,50)),48),(((32,37),35),(((33,46),36),34))))),(40,14)),(15,((20,21),13)))),(16,4)),53),10),(7,(9,6))),3);
	TREE 'Tree 27 from search (criterion: minimize Tree value using character matrix)' = (((((((22,(((5,12),8),(11,2))),(((43,((((29,(39,38)),30),42),((((32,37),35),((((((((51,49),((27,26),(47,41))),31),(((1,56),54),52)),28),((44,45),(18,(19,(24,((25,23),17)))))),(55,50)),48)),(((33,46),36),34)))),(40,14)),(15,((20,21),13)))),(16,4)),53),10),(7,(9,6))),3);
	TREE 'Tree 28 from search (criterion: minimize Tree value using character matrix)' = (((((((22,(((5,12),8),(11,2))),(((43,((((29,(39,38)),30),42),(((32,37),35),(((((((((51,49),((27,26),(47,41))),31),(((1,56),54),52)),28),((44,45),(18,(19,(24,((25,23),17)))))),(55,50)),48),(((33,46),36),34))))),(40,14)),(15,((20,21),13)))),(16,4)),53),10),(7,(9,6))),3);
	TREE 'Tree 29 from search (criterion: minimize Tree value using character matrix)' = (((((((22,(((5,12),8),(11,2))),(((43,((((29,(39,38)),30),42),(((32,37),35),((((33,46),36),((((((((51,49),((27,26),(47,41))),31),(((1,56),54),52)),28),((44,45),(18,(19,(24,((25,23),17)))))),(55,50)),48)),34)))),(40,14)),(15,((20,21),13)))),(16,4)),53),10),(7,(9,6))),3);
	TREE 'Tree 30 from search (criterion: minimize Tree value using character matrix)' = (((((((22,(((5,12),8),(11,2))),(((43,((((29,(39,38)),30),42),(((32,37),35),(((33,46),36),(((((((((51,49),((27,26),(47,41))),31),(((1,56),54),52)),28),((44,45),(18,(19,(24,((25,23),17)))))),(55,50)),48),34))))),(40,14)),(15,((20,21),13)))),(16,4)),53),10),(7,(9,6))),3);
	TREE 'Tree 31 from search (criterion: minimize Tree value using character matrix)' = (((((((22,(((5,12),8),(11,2))),(((((48,43),(((((((51,49),((27,26),(47,41))),31),(((1,56),54),52)),28),((44,45),(18,(19,(24,((25,23),17)))))),(55,50))),((((29,(39,38)),30),42),(((32,37),35),(((33,46),36),34)))),(40,14)),(15,((20,21),13)))),(16,4)),53),10),(7,(9,6))),3);
	TREE 'Tree 32 from search (criterion: minimize Tree value using character matrix)' = (((((((22,(((5,12),8),(11,2))),((((48,((((((((51,49),((27,26),(47,41))),31),(((1,56),54),52)),28),((44,45),(18,(19,(24,((25,23),17)))))),(55,50)),43)),((((29,(39,38)),30),42),(((32,37),35),(((33,46),36),34)))),(40,14)),(15,((20,21),13)))),(16,4)),53),10),(7,(9,6))),3);
	TREE 'Tree 33 from search (criterion: minimize Tree value using character matrix)' = (((((((22,(((5,12),8),(11,2))),(((((((55,50),48),43),((((((51,49),((27,26),(47,41))),31),(((1,56),54),52)),28),((44,45),(18,(19,(24,((25,23),17))))))),((((29,(39,38)),30),42),(((32,37),35),(((33,46),36),34)))),(40,14)),(15,((20,21),13)))),(16,4)),53),10),(7,(9,6))),3);
	TREE 'Tree 34 from search (criterion: minimize Tree value using character matrix)' = (((((((22,(((5,12),8),(11,2))),(((((((55,50),48),((((((51,49),((27,26),(47,41))),31),(((1,56),54),52)),28),((44,45),(18,(19,(24,((25,23),17))))))),43),((((29,(39,38)),30),42),(((32,37),35),(((33,46),36),34)))),(40,14)),(15,((20,21),13)))),(16,4)),53),10),(7,(9,6))),3);
	TREE 'Tree 35 from search (criterion: minimize Tree value using character matrix)' = (((((((22,(((5,12),8),(11,2))),((((((55,50),(((((((51,49),((27,26),(47,41))),31),(((1,56),54),52)),28),((44,45),(18,(19,(24,((25,23),17)))))),48)),43),((((29,(39,38)),30),42),(((32,37),35),(((33,46),36),34)))),(40,14)),(15,((20,21),13)))),(16,4)),53),10),(7,(9,6))),3);
	TREE 'Tree 36 from search (criterion: minimize Tree value using character matrix)' = (((((((22,(((5,12),8),(11,2))),((((((55,50),48),(((((((51,49),((27,26),(47,41))),31),(((1,56),54),52)),28),((44,45),(18,(19,(24,((25,23),17)))))),43)),((((29,(39,38)),30),42),(((32,37),35),(((33,46),36),34)))),(40,14)),(15,((20,21),13)))),(16,4)),53),10),(7,(9,6))),3);
	TREE 'Tree 37 from search (criterion: minimize Tree value using character matrix)' = (((((((22,(((5,12),8),(11,2))),(((((((((44,45),(18,(19,(24,((25,23),17))))),(55,50)),48),43),(((((51,49),((27,26),(47,41))),31),(((1,56),54),52)),28)),((((29,(39,38)),30),42),(((32,37),35),(((33,46),36),34)))),(40,14)),(15,((20,21),13)))),(16,4)),53),10),(7,(9,6))),3);
	TREE 'Tree 38 from search (criterion: minimize Tree value using character matrix)' = (((((((22,(((5,12),8),(11,2))),(((((((((44,45),(18,(19,(24,((25,23),17))))),(55,50)),48),(((((51,49),((27,26),(47,41))),31),(((1,56),54),52)),28)),43),((((29,(39,38)),30),42),(((32,37),35),(((33,46),36),34)))),(40,14)),(15,((20,21),13)))),(16,4)),53),10),(7,(9,6))),3);
	TREE 'Tree 39 from search (criterion: minimize Tree value using character matrix)' = (((((((22,(((5,12),8),(11,2))),(((((((((44,45),(18,(19,(24,((25,23),17))))),(55,50)),(((((51,49),((27,26),(47,41))),31),(((1,56),54),52)),28)),48),43),((((29,(39,38)),30),42),(((32,37),35),(((33,46),36),34)))),(40,14)),(15,((20,21),13)))),(16,4)),53),10),(7,(9,6))),3);
	TREE 'Tree 40 from search (criterion: minimize Tree value using character matrix)' = (((((((22,(((5,12),8),(11,2))),((((((((44,45),(18,(19,(24,((25,23),17))))),((((((51,49),((27,26),(47,41))),31),(((1,56),54),52)),28),(55,50))),48),43),((((29,(39,38)),30),42),(((32,37),35),(((33,46),36),34)))),(40,14)),(15,((20,21),13)))),(16,4)),53),10),(7,(9,6))),3);
	TREE 'Tree 41 from search (criterion: minimize Tree value using character matrix)' = (((((((22,(((5,12),8),(11,2))),((((((((44,45),(18,(19,(24,((25,23),17))))),(55,50)),((((((51,49),((27,26),(47,41))),31),(((1,56),54),52)),28),48)),43),((((29,(39,38)),30),42),(((32,37),35),(((33,46),36),34)))),(40,14)),(15,((20,21),13)))),(16,4)),53),10),(7,(9,6))),3);
	TREE 'Tree 42 from search (criterion: minimize Tree value using character matrix)' = (((((((22,(((5,12),8),(11,2))),((((((((44,45),(18,(19,(24,((25,23),17))))),(55,50)),48),((((((51,49),((27,26),(47,41))),31),(((1,56),54),52)),28),43)),((((29,(39,38)),30),42),(((32,37),35),(((33,46),36),34)))),(40,14)),(15,((20,21),13)))),(16,4)),53),10),(7,(9,6))),3);
	TREE 'Tree 43 from search (criterion: minimize Tree value using character matrix)' = (((((((22,(((5,12),8),(11,2))),((((((((28,((44,45),(18,(19,(24,((25,23),17)))))),(55,50)),48),43),((((51,49),((27,26),(47,41))),31),(((1,56),54),52))),((((29,(39,38)),30),42),(((32,37),35),(((33,46),36),34)))),(40,14)),(15,((20,21),13)))),(16,4)),53),10),(7,(9,6))),3);
	TREE 'Tree 44 from search (criterion: minimize Tree value using character matrix)' = (((((((22,(((5,12),8),(11,2))),((((((((28,((44,45),(18,(19,(24,((25,23),17)))))),(55,50)),48),((((51,49),((27,26),(47,41))),31),(((1,56),54),52))),43),((((29,(39,38)),30),42),(((32,37),35),(((33,46),36),34)))),(40,14)),(15,((20,21),13)))),(16,4)),53),10),(7,(9,6))),3);
	TREE 'Tree 45 from search (criterion: minimize Tree value using character matrix)' = (((((((22,(((5,12),8),(11,2))),((((((((28,((44,45),(18,(19,(24,((25,23),17)))))),(55,50)),((((51,49),((27,26),(47,41))),31),(((1,56),54),52))),48),43),((((29,(39,38)),30),42),(((32,37),35),(((33,46),36),34)))),(40,14)),(15,((20,21),13)))),(16,4)),53),10),(7,(9,6))),3);
	TREE 'Tree 46 from search (criterion: minimize Tree value using character matrix)' = (((((((22,(((5,12),8),(11,2))),((((((((28,((44,45),(18,(19,(24,((25,23),17)))))),((((51,49),((27,26),(47,41))),31),(((1,56),54),52))),(55,50)),48),43),((((29,(39,38)),30),42),(((32,37),35),(((33,46),36),34)))),(40,14)),(15,((20,21),13)))),(16,4)),53),10),(7,(9,6))),3);
	TREE 'Tree 47 from search (criterion: minimize Tree value using character matrix)' = (((((((22,(((5,12),8),(11,2))),(((((((28,(((((51,49),((27,26),(47,41))),31),(((1,56),54),52)),((44,45),(18,(19,(24,((25,23),17))))))),(55,50)),48),43),((((29,(39,38)),30),42),(((32,37),35),(((33,46),36),34)))),(40,14)),(15,((20,21),13)))),(16,4)),53),10),(7,(9,6))),3);
	TREE 'Tree 48 from search (criterion: minimize Tree value using character matrix)' = (((((((22,(((5,12),8),(11,2))),(((((((28,((44,45),(18,(19,(24,((25,23),17)))))),(((((51,49),((27,26),(47,41))),31),(((1,56),54),52)),(55,50))),48),43),((((29,(39,38)),30),42),(((32,37),35),(((33,46),36),34)))),(40,14)),(15,((20,21),13)))),(16,4)),53),10),(7,(9,6))),3);
	TREE 'Tree 49 from search (criterion: minimize Tree value using character matrix)' = (((((((22,(((5,12),8),(11,2))),(((((((28,((44,45),(18,(19,(24,((25,23),17)))))),(55,50)),(((((51,49),((27,26),(47,41))),31),(((1,56),54),52)),48)),43),((((29,(39,38)),30),42),(((32,37),35),(((33,46),36),34)))),(40,14)),(15,((20,21),13)))),(16,4)),53),10),(7,(9,6))),3);
	TREE 'Tree 50 from search (criterion: minimize Tree value using character matrix)' = (((((((22,(((5,12),8),(11,2))),(((((((28,((44,45),(18,(19,(24,((25,23),17)))))),(55,50)),48),(((((51,49),((27,26),(47,41))),31),(((1,56),54),52)),43)),((((29,(39,38)),30),42),(((32,37),35),(((33,46),36),34)))),(40,14)),(15,((20,21),13)))),(16,4)),53),10),(7,(9,6))),3);
	TREE 'Tree 51 from search (criterion: minimize Tree value using character matrix)' = (((((((22,(((5,12),8),(11,2))),((((((((((((1,56),54),(((51,49),((27,26),(47,41))),31)),52),28),((44,45),(18,(19,(24,((25,23),17)))))),(55,50)),48),43),((((29,(39,38)),30),42),(((32,37),35),(((33,46),36),34)))),(40,14)),(15,((20,21),13)))),(16,4)),53),10),(7,(9,6))),3);
	TREE 'Tree 52 from search (criterion: minimize Tree value using character matrix)' = (((((((22,(((5,12),8),(11,2))),((((((((((((1,56),(((51,49),((27,26),(47,41))),31)),54),52),28),((44,45),(18,(19,(24,((25,23),17)))))),(55,50)),48),43),((((29,(39,38)),30),42),(((32,37),35),(((33,46),36),34)))),(40,14)),(15,((20,21),13)))),(16,4)),53),10),(7,(9,6))),3);
	TREE 'Tree 53 from search (criterion: minimize Tree value using character matrix)' = (((((((22,(((5,12),8),(11,2))),((((((((((((1,(((51,49),((27,26),(47,41))),31)),56),54),52),28),((44,45),(18,(19,(24,((25,23),17)))))),(55,50)),48),43),((((29,(39,38)),30),42),(((32,37),35),(((33,46),36),34)))),(40,14)),(15,((20,21),13)))),(16,4)),53),10),(7,(9,6))),3);
	TREE 'Tree 54 from search (criterion: minimize Tree value using character matrix)' = (((((((22,(((5,12),8),(11,2))),(((((((((((1,((((51,49),((27,26),(47,41))),31),56)),54),52),28),((44,45),(18,(19,(24,((25,23),17)))))),(55,50)),48),43),((((29,(39,38)),30),42),(((32,37),35),(((33,46),36),34)))),(40,14)),(15,((20,21),13)))),(16,4)),53),10),(7,(9,6))),3);
	TREE 'Tree 55 from search (criterion: minimize Tree value using character matrix)' = (((((((22,(((5,12),8),(11,2))),(((((((((((1,56),((((51,49),((27,26),(47,41))),31),54)),52),28),((44,45),(18,(19,(24,((25,23),17)))))),(55,50)),48),43),((((29,(39,38)),30),42),(((32,37),35),(((33,46),36),34)))),(40,14)),(15,((20,21),13)))),(16,4)),53),10),(7,(9,6))),3);
	TREE 'Tree 56 from search (criterion: minimize Tree value using character matrix)' = (((((((22,(((5,12),8),(11,2))),(((((((((((1,56),54),((((51,49),((27,26),(47,41))),31),52)),28),((44,45),(18,(19,(24,((25,23),17)))))),(55,50)),48),43),((((29,(39,38)),30),42),(((32,37),35),(((33,46),36),34)))),(40,14)),(15,((20,21),13)))),(16,4)),53),10),(7,(9,6))),3);
	TREE 'Tree 57 from search (criterion: minimize Tree value using character matrix)' = (((((((22,(((5,12),8),(11,2))),((((((((((31,(((1,56),54),52)),((51,49),((27,26),(47,41)))),28),((44,45),(18,(19,(24,((25,23),17)))))),(55,50)),48),43),((((29,(39,38)),30),42),(((32,37),35),(((33,46),36),34)))),(40,14)),(15,((20,21),13)))),(16,4)),53),10),(7,(9,6))),3);
	TREE 'Tree 58 from search (criterion: minimize Tree value using character matrix)' = (((((((22,(((5,12),8),(11,2))),(((((((((31,(((51,49),((27,26),(47,41))),(((1,56),54),52))),28),((44,45),(18,(19,(24,((25,23),17)))))),(55,50)),48),43),((((29,(39,38)),30),42),(((32,37),35),(((33,46),36),34)))),(40,14)),(15,((20,21),13)))),(16,4)),53),10),(7,(9,6))),3);
	TREE 'Tree 59 from search (criterion: minimize Tree value using character matrix)' = (((((((22,(((5,12),8),(11,2))),(((((((((31,((((1,56),54),((51,49),((27,26),(47,41)))),52)),28),((44,45),(18,(19,(24,((25,23),17)))))),(55,50)),48),43),((((29,(39,38)),30),42),(((32,37),35),(((33,46),36),34)))),(40,14)),(15,((20,21),13)))),(16,4)),53),10),(7,(9,6))),3);
	TREE 'Tree 60 from search (criterion: minimize Tree value using character matrix)' = (((((((22,(((5,12),8),(11,2))),(((((((((31,((((1,56),((51,49),((27,26),(47,41)))),54),52)),28),((44,45),(18,(19,(24,((25,23),17)))))),(55,50)),48),43),((((29,(39,38)),30),42),(((32,37),35),(((33,46),36),34)))),(40,14)),(15,((20,21),13)))),(16,4)),53),10),(7,(9,6))),3);
	TREE 'Tree 61 from search (criterion: minimize Tree value using character matrix)' = (((((((22,(((5,12),8),(11,2))),(((((((((31,((((1,((51,49),((27,26),(47,41)))),56),54),52)),28),((44,45),(18,(19,(24,((25,23),17)))))),(55,50)),48),43),((((29,(39,38)),30),42),(((32,37),35),(((33,46),36),34)))),(40,14)),(15,((20,21),13)))),(16,4)),53),10),(7,(9,6))),3);
	TREE 'Tree 62 from search (criterion: minimize Tree value using character matrix)' = (((((((22,(((5,12),8),(11,2))),(((((((((31,(((1,(((51,49),((27,26),(47,41))),56)),54),52)),28),((44,45),(18,(19,(24,((25,23),17)))))),(55,50)),48),43),((((29,(39,38)),30),42),(((32,37),35),(((33,46),36),34)))),(40,14)),(15,((20,21),13)))),(16,4)),53),10),(7,(9,6))),3);
	TREE 'Tree 63 from search (criterion: minimize Tree value using character matrix)' = (((((((22,(((5,12),8),(11,2))),(((((((((31,(((1,56),(((51,49),((27,26),(47,41))),54)),52)),28),((44,45),(18,(19,(24,((25,23),17)))))),(55,50)),48),43),((((29,(39,38)),30),42),(((32,37),35),(((33,46),36),34)))),(40,14)),(15,((20,21),13)))),(16,4)),53),10),(7,(9,6))),3);
	TREE 'Tree 64 from search (criterion: minimize Tree value using character matrix)' = (((((((22,(((5,12),8),(11,2))),(((((((((31,(((1,56),54),(((51,49),((27,26),(47,41))),52))),28),((44,45),(18,(19,(24,((25,23),17)))))),(55,50)),48),43),((((29,(39,38)),30),42),(((32,37),35),(((33,46),36),34)))),(40,14)),(15,((20,21),13)))),(16,4)),53),10),(7,(9,6))),3);
	TREE 'Tree 65 from search (criterion: minimize Tree value using character matrix)' = (((((((22,(((5,12),8),(11,2))),((((((((((((49,((27,26),(47,41))),51),31),(((1,56),54),52)),28),((44,45),(18,(19,(24,((25,23),17)))))),(55,50)),48),43),((((29,(39,38)),30),42),(((32,37),35),(((33,46),36),34)))),(40,14)),(15,((20,21),13)))),(16,4)),53),10),(7,(9,6))),3);
	TREE 'Tree 66 from search (criterion: minimize Tree value using character matrix)' = (((((((22,(((5,12),8),(11,2))),(((((((((((49,(51,((27,26),(47,41)))),31),(((1,56),54),52)),28),((44,45),(18,(19,(24,((25,23),17)))))),(55,50)),48),43),((((29,(39,38)),30),42),(((32,37),35),(((33,46),36),34)))),(40,14)),(15,((20,21),13)))),(16,4)),53),10),(7,(9,6))),3);
	TREE 'Tree 67 from search (criterion: minimize Tree value using character matrix)' = (((((((22,(((5,12),8),(11,2))),((((((((((((51,((27,26),(47,41))),31),(((1,56),54),52)),28),((44,45),(18,(19,(24,((25,23),17)))))),(55,50)),48),43),49),((((29,(39,38)),30),42),(((32,37),35),(((33,46),36),34)))),(40,14)),(15,((20,21),13)))),(16,4)),53),10),(7,(9,6))),3);
	TREE 'Tree 68 from search (criterion: minimize Tree value using character matrix)' = (((((((22,(((5,12),8),(11,2))),((((((((((((51,((27,26),(47,41))),31),(((1,56),54),52)),28),((44,45),(18,(19,(24,((25,23),17)))))),(55,50)),48),49),43),((((29,(39,38)),30),42),(((32,37),35),(((33,46),36),34)))),(40,14)),(15,((20,21),13)))),(16,4)),53),10),(7,(9,6))),3);
	TREE 'Tree 69 from search (criterion: minimize Tree value using character matrix)' = (((((((22,(((5,12),8),(11,2))),((((((((((((51,((27,26),(47,41))),31),(((1,56),54),52)),28),((44,45),(18,(19,(24,((25,23),17)))))),(55,50)),49),48),43),((((29,(39,38)),30),42),(((32,37),35),(((33,46),36),34)))),(40,14)),(15,((20,21),13)))),(16,4)),53),10),(7,(9,6))),3);
	TREE 'Tree 70 from search (criterion: minimize Tree value using character matrix)' = (((((((22,(((5,12),8),(11,2))),((((((((((((51,((27,26),(47,41))),31),(((1,56),54),52)),28),((44,45),(18,(19,(24,((25,23),17)))))),49),(55,50)),48),43),((((29,(39,38)),30),42),(((32,37),35),(((33,46),36),34)))),(40,14)),(15,((20,21),13)))),(16,4)),53),10),(7,(9,6))),3);
	TREE 'Tree 71 from search (criterion: minimize Tree value using character matrix)' = (((((((22,(((5,12),8),(11,2))),((((((((((((51,((27,26),(47,41))),31),(((1,56),54),52)),28),49),((44,45),(18,(19,(24,((25,23),17)))))),(55,50)),48),43),((((29,(39,38)),30),42),(((32,37),35),(((33,46),36),34)))),(40,14)),(15,((20,21),13)))),(16,4)),53),10),(7,(9,6))),3);
	TREE 'Tree 72 from search (criterion: minimize Tree value using character matrix)' = (((((((22,(((5,12),8),(11,2))),((((((((((((51,((27,26),(47,41))),31),(((1,56),54),52)),49),28),((44,45),(18,(19,(24,((25,23),17)))))),(55,50)),48),43),((((29,(39,38)),30),42),(((32,37),35),(((33,46),36),34)))),(40,14)),(15,((20,21),13)))),(16,4)),53),10),(7,(9,6))),3);
	TREE 'Tree 73 from search (criterion: minimize Tree value using character matrix)' = (((((((22,(((5,12),8),(11,2))),((((((((((((51,((27,26),(47,41))),31),49),(((1,56),54),52)),28),((44,45),(18,(19,(24,((25,23),17)))))),(55,50)),48),43),((((29,(39,38)),30),42),(((32,37),35),(((33,46),36),34)))),(40,14)),(15,((20,21),13)))),(16,4)),53),10),(7,(9,6))),3);
	TREE 'Tree 74 from search (criterion: minimize Tree value using character matrix)' = (((((((22,(((5,12),8),(11,2))),(((((((((((51,((27,26),((47,49),41))),31),(((1,56),54),52)),28),((44,45),(18,(19,(24,((25,23),17)))))),(55,50)),48),43),((((29,(39,38)),30),42),(((32,37),35),(((33,46),36),34)))),(40,14)),(15,((20,21),13)))),(16,4)),53),10),(7,(9,6))),3);
	TREE 'Tree 75 from search (criterion: minimize Tree value using character matrix)' = (((((((22,(((5,12),8),(11,2))),(((((((((((51,((27,26),(47,41))),(49,31)),(((1,56),54),52)),28),((44,45),(18,(19,(24,((25,23),17)))))),(55,50)),48),43),((((29,(39,38)),30),42),(((32,37),35),(((33,46),36),34)))),(40,14)),(15,((20,21),13)))),(16,4)),53),10),(7,(9,6))),3);
	TREE 'Tree 76 from search (criterion: minimize Tree value using character matrix)' = (((((((22,(((5,12),8),(11,2))),(((((((((((51,((27,26),(47,41))),31),(49,(((1,56),54),52))),28),((44,45),(18,(19,(24,((25,23),17)))))),(55,50)),48),43),((((29,(39,38)),30),42),(((32,37),35),(((33,46),36),34)))),(40,14)),(15,((20,21),13)))),(16,4)),53),10),(7,(9,6))),3);
	TREE 'Tree 77 from search (criterion: minimize Tree value using character matrix)' = (((((((22,(((5,12),8),(11,2))),(((((((((((51,((27,26),(47,41))),31),((((1,56),54),49),52)),28),((44,45),(18,(19,(24,((25,23),17)))))),(55,50)),48),43),((((29,(39,38)),30),42),(((32,37),35),(((33,46),36),34)))),(40,14)),(15,((20,21),13)))),(16,4)),53),10),(7,(9,6))),3);
	TREE 'Tree 78 from search (criterion: minimize Tree value using character matrix)' = (((((((22,(((5,12),8),(11,2))),(((((((((((51,((27,26),(47,41))),31),((((1,56),49),54),52)),28),((44,45),(18,(19,(24,((25,23),17)))))),(55,50)),48),43),((((29,(39,38)),30),42),(((32,37),35),(((33,46),36),34)))),(40,14)),(15,((20,21),13)))),(16,4)),53),10),(7,(9,6))),3);
	TREE 'Tree 79 from search (criterion: minimize Tree value using character matrix)' = (((((((22,(((5,12),8),(11,2))),(((((((((((51,((27,26),(47,41))),31),((((1,49),56),54),52)),28),((44,45),(18,(19,(24,((25,23),17)))))),(55,50)),48),43),((((29,(39,38)),30),42),(((32,37),35),(((33,46),36),34)))),(40,14)),(15,((20,21),13)))),(16,4)),53),10),(7,(9,6))),3);
	TREE 'Tree 80 from search (criterion: minimize Tree value using character matrix)' = (((((((22,(((5,12),8),(11,2))),(((((((((((51,((27,26),(47,41))),31),(((1,(49,56)),54),52)),28),((44,45),(18,(19,(24,((25,23),17)))))),(55,50)),48),43),((((29,(39,38)),30),42),(((32,37),35),(((33,46),36),34)))),(40,14)),(15,((20,21),13)))),(16,4)),53),10),(7,(9,6))),3);
	TREE 'Tree 81 from search (criterion: minimize Tree value using character matrix)' = (((((((22,(((5,12),8),(11,2))),(((((((((((51,((27,26),(47,41))),31),(((1,56),(49,54)),52)),28),((44,45),(18,(19,(24,((25,23),17)))))),(55,50)),48),43),((((29,(39,38)),30),42),(((32,37),35),(((33,46),36),34)))),(40,14)),(15,((20,21),13)))),(16,4)),53),10),(7,(9,6))),3);
	TREE 'Tree 82 from search (criterion: minimize Tree value using character matrix)' = (((((((22,(((5,12),8),(11,2))),(((((((((((51,((27,26),(47,41))),31),(((1,56),54),(49,52))),28),((44,45),(18,(19,(24,((25,23),17)))))),(55,50)),48),43),((((29,(39,38)),30),42),(((32,37),35),(((33,46),36),34)))),(40,14)),(15,((20,21),13)))),(16,4)),53),10),(7,(9,6))),3);
	TREE 'Tree 83 from search (criterion: minimize Tree value using character matrix)' = (((((((22,(((5,12),8),(11,2))),(((((((((((51,((27,26),(47,41))),31),(((1,56),54),52)),(49,28)),((44,45),(18,(19,(24,((25,23),17)))))),(55,50)),48),43),((((29,(39,38)),30),42),(((32,37),35),(((33,46),36),34)))),(40,14)),(15,((20,21),13)))),(16,4)),53),10),(7,(9,6))),3);
	TREE 'Tree 84 from search (criterion: minimize Tree value using character matrix)' = (((((((22,(((5,12),8),(11,2))),(((((((((((51,((27,26),(47,41))),31),(((1,56),54),52)),28),(49,((44,45),(18,(19,(24,((25,23),17))))))),(55,50)),48),43),((((29,(39,38)),30),42),(((32,37),35),(((33,46),36),34)))),(40,14)),(15,((20,21),13)))),(16,4)),53),10),(7,(9,6))),3);
	TREE 'Tree 85 from search (criterion: minimize Tree value using character matrix)' = (((((((22,(((5,12),8),(11,2))),(((((((((((51,((27,26),(47,41))),31),(((1,56),54),52)),28),(((44,45),49),(18,(19,(24,((25,23),17)))))),(55,50)),48),43),((((29,(39,38)),30),42),(((32,37),35),(((33,46),36),34)))),(40,14)),(15,((20,21),13)))),(16,4)),53),10),(7,(9,6))),3);
	TREE 'Tree 86 from search (criterion: minimize Tree value using character matrix)' = (((((((22,(((5,12),8),(11,2))),(((((((((((51,((27,26),(47,41))),31),(((1,56),54),52)),28),((44,45),(49,(18,(19,(24,((25,23),17))))))),(55,50)),48),43),((((29,(39,38)),30),42),(((32,37),35),(((33,46),36),34)))),(40,14)),(15,((20,21),13)))),(16,4)),53),10),(7,(9,6))),3);
	TREE 'Tree 87 from search (criterion: minimize Tree value using character matrix)' = (((((((22,(((5,12),8),(11,2))),(((((((((((51,((27,26),(47,41))),31),(((1,56),54),52)),28),((44,45),(18,(19,(24,((25,23),17)))))),(49,(55,50))),48),43),((((29,(39,38)),30),42),(((32,37),35),(((33,46),36),34)))),(40,14)),(15,((20,21),13)))),(16,4)),53),10),(7,(9,6))),3);
	TREE 'Tree 88 from search (criterion: minimize Tree value using character matrix)' = (((((((22,(((5,12),8),(11,2))),(((((((((((51,((27,26),(47,41))),31),(((1,56),54),52)),28),((44,45),(18,(19,(24,((25,23),17)))))),(55,50)),(49,48)),43),((((29,(39,38)),30),42),(((32,37),35),(((33,46),36),34)))),(40,14)),(15,((20,21),13)))),(16,4)),53),10),(7,(9,6))),3);
	TREE 'Tree 89 from search (criterion: minimize Tree value using character matrix)' = (((((((22,(((5,12),8),(11,2))),(((((((((((51,((27,26),(47,41))),31),(((1,56),54),52)),28),((44,45),(18,(19,(24,((25,23),17)))))),(55,50)),48),(49,43)),((((29,(39,38)),30),42),(((32,37),35),(((33,46),36),34)))),(40,14)),(15,((20,21),13)))),(16,4)),53),10),(7,(9,6))),3);
	TREE 'Tree 90 from search (criterion: minimize Tree value using character matrix)' = (((((((22,(((5,12),8),(11,2))),((((((((((((51,49),((47,(27,26)),41)),31),(((1,56),54),52)),28),((44,45),(18,(19,(24,((25,23),17)))))),(55,50)),48),43),((((29,(39,38)),30),42),(((32,37),35),(((33,46),36),34)))),(40,14)),(15,((20,21),13)))),(16,4)),53),10),(7,(9,6))),3);
	TREE 'Tree 91 from search (criterion: minimize Tree value using character matrix)' = (((((((22,(((5,12),8),(11,2))),((((((((((((51,49),(47,((27,26),41))),31),(((1,56),54),52)),28),((44,45),(18,(19,(24,((25,23),17)))))),(55,50)),48),43),((((29,(39,38)),30),42),(((32,37),35),(((33,46),36),34)))),(40,14)),(15,((20,21),13)))),(16,4)),53),10),(7,(9,6))),3);
	TREE 'Tree 92 from search (criterion: minimize Tree value using character matrix)' = (((((((22,(((5,12),8),(11,2))),((((((((((((51,49),(27,(47,41))),31),(((1,56),54),52)),28),((44,45),(18,(19,(24,((25,23),17)))))),(55,50)),48),(26,43)),((((29,(39,38)),30),42),(((32,37),35),(((33,46),36),34)))),(40,14)),(15,((20,21),13)))),(16,4)),53),10),(7,(9,6))),3);
	TREE 'Tree 93 from search (criterion: minimize Tree value using character matrix)' = (((((((22,(((5,12),8),(11,2))),((((((((((((51,(47,49)),((27,26),41)),31),(((1,56),54),52)),28),((44,45),(18,(19,(24,((25,23),17)))))),(55,50)),48),43),((((29,(39,38)),30),42),(((32,37),35),(((33,46),36),34)))),(40,14)),(15,((20,21),13)))),(16,4)),53),10),(7,(9,6))),3);
	TREE 'Tree 94 from search (criterion: minimize Tree value using character matrix)' = (((((((22,(((5,12),8),(11,2))),((((((((((((51,49),((27,26),41)),31),(((1,56),54),52)),28),((44,45),(18,(19,(24,((25,23),17)))))),(55,50)),(47,48)),43),((((29,(39,38)),30),42),(((32,37),35),(((33,46),36),34)))),(40,14)),(15,((20,21),13)))),(16,4)),53),10),(7,(9,6))),3);
	TREE 'Tree 95 from search (criterion: minimize Tree value using character matrix)' = (((((((22,(((5,12),8),(11,2))),(((((((((((51,49),((27,26),(47,41))),((((1,56),54),31),52)),28),((44,45),(18,(19,(24,((25,23),17)))))),(55,50)),48),43),((((29,(39,38)),30),42),(((32,37),35),(((33,46),36),34)))),(40,14)),(15,((20,21),13)))),(16,4)),53),10),(7,(9,6))),3);
	TREE 'Tree 96 from search (criterion: minimize Tree value using character matrix)' = (((((((22,(((5,12),8),(11,2))),(((((((((((51,49),((27,26),(47,41))),((((1,56),31),54),52)),28),((44,45),(18,(19,(24,((25,23),17)))))),(55,50)),48),43),((((29,(39,38)),30),42),(((32,37),35),(((33,46),36),34)))),(40,14)),(15,((20,21),13)))),(16,4)),53),10),(7,(9,6))),3);
	TREE 'Tree 97 from search (criterion: minimize Tree value using character matrix)' = (((((((22,(((5,12),8),(11,2))),(((((((((((51,49),((27,26),(47,41))),((((1,31),56),54),52)),28),((44,45),(18,(19,(24,((25,23),17)))))),(55,50)),48),43),((((29,(39,38)),30),42),(((32,37),35),(((33,46),36),34)))),(40,14)),(15,((20,21),13)))),(16,4)),53),10),(7,(9,6))),3);
	TREE 'Tree 98 from search (criterion: minimize Tree value using character matrix)' = (((((((22,(((5,12),8),(11,2))),(((((((((((51,49),((27,26),(47,41))),(((1,(31,56)),54),52)),28),((44,45),(18,(19,(24,((25,23),17)))))),(55,50)),48),43),((((29,(39,38)),30),42),(((32,37),35),(((33,46),36),34)))),(40,14)),(15,((20,21),13)))),(16,4)),53),10),(7,(9,6))),3);
	TREE 'Tree 99 from search (criterion: minimize Tree value using character matrix)' = (((((((22,(((5,12),8),(11,2))),(((((((((((51,49),((27,26),(47,41))),(((1,56),(31,54)),52)),28),((44,45),(18,(19,(24,((25,23),17)))))),(55,50)),48),43),((((29,(39,38)),30),42),(((32,37),35),(((33,46),36),34)))),(40,14)),(15,((20,21),13)))),(16,4)),53),10),(7,(9,6))),3);
	TREE 'Tree 100 from search (criterion: minimize Tree value using character matrix)' = (((((((22,(((5,12),8),(11,2))),(((((((((((51,49),((27,26),(47,41))),(((1,56),54),(31,52))),28),((44,45),(18,(19,(24,((25,23),17)))))),(55,50)),48),43),((((29,(39,38)),30),42),(((32,37),35),(((33,46),36),34)))),(40,14)),(15,((20,21),13)))),(16,4)),53),10),(7,(9,6))),3);

END;


BEGIN TREES[!'Parameters: Tree search criterion: minimize Treelength'];
	Title 'Trees from Mesquite''s heuristic search';
	ID 015ed70bf1779;
	LINK Taxa = Unpaid_seller;
	TRANSLATE
[0] 		1 NLWNH1809_,
[1] 		2 NLBW1838,
[2] 		3 NLWvK1838,
[3] 		4 NLBW1992,
[4] 		5 FRCC1804,
[5] 		6 FRCdC1807,
[6] 		7 FRCdC2001,
[7] 		8 BEHyp1851,
[8] 		9 BEWvK1851,
[9] 		10 LUCdC2013,
[10] 		11 ITCC1942,
[11] 		12 ROCC1864,
[12] 		13 ROCC2011,
[13] 		14 BGLOC1892,
[14] 		15 BGLOC1951,
[15] 		16 LTCC2000,
[16] 		17 HRCO2006,
[17] 		18 NOMC1994,
[18] 		19 UKSGA1893,
[19] 		20 QCCC1866,
[20] 		21 QCCC1994,
[21] 		22 LACC1825,
[22] 		23 USUCC1952,
[23] 		24 CNCL1999,
[24] 		25 JPBA2004,
[25] 		26 SA1880,
[26] 		27 SAIns1396,
[27] 		28 DDRZGB1976,
[28] 		29 D150,
[29] 		30 INST533,
[30] 		31 PRAvB1389,
[31] 		32 STThol1366,
[32] 		33 STZzee1429,
[33] 		34 STZzee1485,
[34] 		35 STDBr1445,
[35] 		36 STZld1495,
[36] 		37 STVrn1519,
[37] 		38 STOam1618,
[38] 		39 STGro1701,
[39] 		40 STAms1530,
[40] 		41 STAms1626,
[41] 		42 STAms1658,
[42] 		43 STRdm1702,
[43] 		44 STZwo1794,
[44] 		45 STRmd1620,
[45] 		46 STAwn1545,
[46] 		47 STAwn1582,
[47] 		48 STAwn1608,
[48] 		49 STDne1577,
[49] 		50 STPar1580,
[50] 		51 PaPa1306,
[51] 		52 STMrs1253,
[52] 		53 STPsa1161,
[53] 		54 STSna1262,
[54] 		55 STSri1316,
[55] 		56 STAbg1288;
	TREE 'Tree 1 from search (criterion: minimize Treelength)' = (((((((22,(((5,12),8),(11,2))),((((((((((((51,49),((27,26),(47,41))),31),(((1,56),54),52)),28),((44,45),(18,(19,(24,((25,23),17)))))),(55,50)),48),43),((((29,(39,38)),30),42),(((32,37),35),(((33,46),36),34)))),(40,14)),(15,((20,21),13)))),(16,4)),53),10),(7,(9,6))),3)[% ] [% ] [%  setBetweenBits = selected ];
	TREE 'Tree 2 from search (criterion: minimize Treelength)' = (((7,(9,6)),3),(((((22,(((5,12),8),(11,2))),((((((((((((51,49),((27,26),(47,41))),31),(((1,56),54),52)),28),((44,45),(18,(19,(24,((25,23),17)))))),(55,50)),48),43),((((29,(39,38)),30),42),(((32,37),35),(((33,46),36),34)))),(40,14)),(15,((20,21),13)))),(16,4)),53),10))[% ] [% ] [%  setBetweenBits = selected ];
	TREE 'Tree 3 from search (criterion: minimize Treelength)' = ((7,(9,6)),((((((22,(((5,12),8),(11,2))),((((((((((((51,49),((27,26),(47,41))),31),(((1,56),54),52)),28),((44,45),(18,(19,(24,((25,23),17)))))),(55,50)),48),43),((((29,(39,38)),30),42),(((32,37),35),(((33,46),36),34)))),(40,14)),(15,((20,21),13)))),(16,4)),53),10),3))[% ] [% ] [%  setBetweenBits = selected ];
	TREE 'Tree 4 from search (criterion: minimize Treelength)' = (((10,(7,(9,6))),3),((((22,(((5,12),8),(11,2))),((((((((((((51,49),((27,26),(47,41))),31),(((1,56),54),52)),28),((44,45),(18,(19,(24,((25,23),17)))))),(55,50)),48),43),((((29,(39,38)),30),42),(((32,37),35),(((33,46),36),34)))),(40,14)),(15,((20,21),13)))),(16,4)),53))[% ] [% ] [%  setBetweenBits = selected ];
	TREE 'Tree 5 from search (criterion: minimize Treelength)' = (((10,(7,(9,6))),((((22,(((5,12),8),(11,2))),((((((((((((51,49),((27,26),(47,41))),31),(((1,56),54),52)),28),((44,45),(18,(19,(24,((25,23),17)))))),(55,50)),48),43),((((29,(39,38)),30),42),(((32,37),35),(((33,46),36),34)))),(40,14)),(15,((20,21),13)))),(16,4)),53)),3)[% ] [% ] [%  setBetweenBits = selected ];
	TREE 'Tree 6 from search (criterion: minimize Treelength)' = ((10,(((((22,(((5,12),8),(11,2))),((((((((((((51,49),((27,26),(47,41))),31),(((1,56),54),52)),28),((44,45),(18,(19,(24,((25,23),17)))))),(55,50)),48),43),((((29,(39,38)),30),42),(((32,37),35),(((33,46),36),34)))),(40,14)),(15,((20,21),13)))),(16,4)),53),(7,(9,6)))),3)[% ] [% ] [%  setBetweenBits = selected ];
	TREE 'Tree 7 from search (criterion: minimize Treelength)' = ((10,(7,(9,6))),(((((22,(((5,12),8),(11,2))),((((((((((((51,49),((27,26),(47,41))),31),(((1,56),54),52)),28),((44,45),(18,(19,(24,((25,23),17)))))),(55,50)),48),43),((((29,(39,38)),30),42),(((32,37),35),(((33,46),36),34)))),(40,14)),(15,((20,21),13)))),(16,4)),53),3))[% ] [% ] [%  setBetweenBits = selected ];
	TREE 'Tree 8 from search (criterion: minimize Treelength)' = (((((((22,((11,((5,12),8)),2)),((((((((((((51,49),((27,26),(47,41))),31),(((1,56),54),52)),28),((44,45),(18,(19,(24,((25,23),17)))))),(55,50)),48),43),((((29,(39,38)),30),42),(((32,37),35),(((33,46),36),34)))),(40,14)),(15,((20,21),13)))),(16,4)),53),10),(7,(9,6))),3)[% ] [% ] [%  setBetweenBits = selected ];
	TREE 'Tree 9 from search (criterion: minimize Treelength)' = (((((((22,(11,(((5,12),8),2))),((((((((((((51,49),((27,26),(47,41))),31),(((1,56),54),52)),28),((44,45),(18,(19,(24,((25,23),17)))))),(55,50)),48),43),((((29,(39,38)),30),42),(((32,37),35),(((33,46),36),34)))),(40,14)),(15,((20,21),13)))),(16,4)),53),10),(7,(9,6))),3)[% ] [% ] [%  setBetweenBits = selected ];
	TREE 'Tree 10 from search (criterion: minimize Treelength)' = (((((((22,(((5,12),8),(11,2))),((15,(((((((((((51,49),((27,26),(47,41))),31),(((1,56),54),52)),28),((44,45),(18,(19,(24,((25,23),17)))))),(55,50)),48),43),((((29,(39,38)),30),42),(((32,37),35),(((33,46),36),34)))),(40,14))),((20,21),13))),(16,4)),53),10),(7,(9,6))),3)[% ] [% ] [%  setBetweenBits = selected ];
	TREE 'Tree 11 from search (criterion: minimize Treelength)' = (((((((22,(((5,12),8),(11,2))),(15,((((((((((((51,49),((27,26),(47,41))),31),(((1,56),54),52)),28),((44,45),(18,(19,(24,((25,23),17)))))),(55,50)),48),43),((((29,(39,38)),30),42),(((32,37),35),(((33,46),36),34)))),(40,14)),((20,21),13)))),(16,4)),53),10),(7,(9,6))),3)[% ] [% ] [%  setBetweenBits = selected ];
	TREE 'Tree 12 from search (criterion: minimize Treelength)' = (((((((22,(((5,12),8),(11,2))),(15,(((20,21),(((((((((((51,49),((27,26),(47,41))),31),(((1,56),54),52)),28),((44,45),(18,(19,(24,((25,23),17)))))),(55,50)),48),43),((((29,(39,38)),30),42),(((32,37),35),(((33,46),36),34)))),(40,14))),13))),(16,4)),53),10),(7,(9,6))),3)[% ] [% ] [%  setBetweenBits = selected ];
	TREE 'Tree 13 from search (criterion: minimize Treelength)' = (((((((22,(((5,12),8),(11,2))),(15,((20,21),((((((((((((51,49),((27,26),(47,41))),31),(((1,56),54),52)),28),((44,45),(18,(19,(24,((25,23),17)))))),(55,50)),48),43),((((29,(39,38)),30),42),(((32,37),35),(((33,46),36),34)))),(40,14)),13)))),(16,4)),53),10),(7,(9,6))),3)[% ] [% ] [%  setBetweenBits = selected ];
	TREE 'Tree 14 from search (criterion: minimize Treelength)' = (((((((22,(((5,12),8),(11,2))),(((40,((((((((((51,49),((27,26),(47,41))),31),(((1,56),54),52)),28),((44,45),(18,(19,(24,((25,23),17)))))),(55,50)),48),43),((((29,(39,38)),30),42),(((32,37),35),(((33,46),36),34))))),14),(15,((20,21),13)))),(16,4)),53),10),(7,(9,6))),3)[% ] [% ] [%  setBetweenBits = selected ];
	TREE 'Tree 15 from search (criterion: minimize Treelength)' = (((((((22,(((5,12),8),(11,2))),((40,(((((((((((51,49),((27,26),(47,41))),31),(((1,56),54),52)),28),((44,45),(18,(19,(24,((25,23),17)))))),(55,50)),48),43),((((29,(39,38)),30),42),(((32,37),35),(((33,46),36),34)))),14)),(15,((20,21),13)))),(16,4)),53),10),(7,(9,6))),3)[% ] [% ] [%  setBetweenBits = selected ];
	TREE 'Tree 16 from search (criterion: minimize Treelength)' = (((((((22,(((5,12),8),(11,2))),((40,14),(15,(((20,21),((((((((((51,49),((27,26),(47,41))),31),(((1,56),54),52)),28),((44,45),(18,(19,(24,((25,23),17)))))),(55,50)),48),43),((((29,(39,38)),30),42),(((32,37),35),(((33,46),36),34))))),13)))),(16,4)),53),10),(7,(9,6))),3)[% ] [% ] [%  setBetweenBits = selected ];
	TREE 'Tree 17 from search (criterion: minimize Treelength)' = (((((((22,(((5,12),8),(11,2))),(((((((29,(39,38)),30),42),(((((((((51,49),((27,26),(47,41))),31),(((1,56),54),52)),28),((44,45),(18,(19,(24,((25,23),17)))))),(55,50)),48),43)),(((32,37),35),(((33,46),36),34))),(40,14)),(15,((20,21),13)))),(16,4)),53),10),(7,(9,6))),3)[% ] [% ] [%  setBetweenBits = selected ];
	TREE 'Tree 18 from search (criterion: minimize Treelength)' = (((((((22,(((5,12),8),(11,2))),((((((29,(39,38)),30),42),((((((((((51,49),((27,26),(47,41))),31),(((1,56),54),52)),28),((44,45),(18,(19,(24,((25,23),17)))))),(55,50)),48),43),(((32,37),35),(((33,46),36),34)))),(40,14)),(15,((20,21),13)))),(16,4)),53),10),(7,(9,6))),3)[% ] [% ] [%  setBetweenBits = selected ];
	TREE 'Tree 19 from search (criterion: minimize Treelength)' = (((((((22,(((5,12),8),(11,2))),((((((29,(39,38)),30),42),((((32,37),35),(((((((((51,49),((27,26),(47,41))),31),(((1,56),54),52)),28),((44,45),(18,(19,(24,((25,23),17)))))),(55,50)),48),43)),(((33,46),36),34))),(40,14)),(15,((20,21),13)))),(16,4)),53),10),(7,(9,6))),3)[% ] [% ] [%  setBetweenBits = selected ];
	TREE 'Tree 20 from search (criterion: minimize Treelength)' = (((((((22,(((5,12),8),(11,2))),((((((29,(39,38)),30),42),(((32,37),35),((((((((((51,49),((27,26),(47,41))),31),(((1,56),54),52)),28),((44,45),(18,(19,(24,((25,23),17)))))),(55,50)),48),43),(((33,46),36),34)))),(40,14)),(15,((20,21),13)))),(16,4)),53),10),(7,(9,6))),3)[% ] [% ] [%  setBetweenBits = selected ];
	TREE 'Tree 21 from search (criterion: minimize Treelength)' = (((((((22,(((5,12),8),(11,2))),((((((29,(39,38)),30),42),(((32,37),35),((((33,46),36),(((((((((51,49),((27,26),(47,41))),31),(((1,56),54),52)),28),((44,45),(18,(19,(24,((25,23),17)))))),(55,50)),48),43)),34))),(40,14)),(15,((20,21),13)))),(16,4)),53),10),(7,(9,6))),3)[% ] [% ] [%  setBetweenBits = selected ];
	TREE 'Tree 22 from search (criterion: minimize Treelength)' = (((((((22,(((5,12),8),(11,2))),((((((29,(39,38)),30),42),(((32,37),35),(((33,46),36),((((((((((51,49),((27,26),(47,41))),31),(((1,56),54),52)),28),((44,45),(18,(19,(24,((25,23),17)))))),(55,50)),48),43),34)))),(40,14)),(15,((20,21),13)))),(16,4)),53),10),(7,(9,6))),3)[% ] [% ] [%  setBetweenBits = selected ];
	TREE 'Tree 23 from search (criterion: minimize Treelength)' = (((((((22,(((5,12),8),(11,2))),((((43,((((29,(39,38)),30),42),(((32,37),35),(((33,46),36),34)))),((((((((51,49),((27,26),(47,41))),31),(((1,56),54),52)),28),((44,45),(18,(19,(24,((25,23),17)))))),(55,50)),48)),(40,14)),(15,((20,21),13)))),(16,4)),53),10),(7,(9,6))),3)[% ] [% ] [%  setBetweenBits = selected ];
	TREE 'Tree 24 from search (criterion: minimize Treelength)' = (((((((22,(((5,12),8),(11,2))),(((43,(((((((((51,49),((27,26),(47,41))),31),(((1,56),54),52)),28),((44,45),(18,(19,(24,((25,23),17)))))),(55,50)),48),((((29,(39,38)),30),42),(((32,37),35),(((33,46),36),34))))),(40,14)),(15,((20,21),13)))),(16,4)),53),10),(7,(9,6))),3)[% ] [% ] [%  setBetweenBits = selected ];
	TREE 'Tree 25 from search (criterion: minimize Treelength)' = (((((((22,(((5,12),8),(11,2))),(((43,(((((29,(39,38)),30),42),((((((((51,49),((27,26),(47,41))),31),(((1,56),54),52)),28),((44,45),(18,(19,(24,((25,23),17)))))),(55,50)),48)),(((32,37),35),(((33,46),36),34)))),(40,14)),(15,((20,21),13)))),(16,4)),53),10),(7,(9,6))),3)[% ] [% ] [%  setBetweenBits = selected ];
	TREE 'Tree 26 from search (criterion: minimize Treelength)' = (((((((22,(((5,12),8),(11,2))),(((43,((((29,(39,38)),30),42),(((((((((51,49),((27,26),(47,41))),31),(((1,56),54),52)),28),((44,45),(18,(19,(24,((25,23),17)))))),(55,50)),48),(((32,37),35),(((33,46),36),34))))),(40,14)),(15,((20,21),13)))),(16,4)),53),10),(7,(9,6))),3)[% ] [% ] [%  setBetweenBits = selected ];
	TREE 'Tree 27 from search (criterion: minimize Treelength)' = (((((((22,(((5,12),8),(11,2))),(((43,((((29,(39,38)),30),42),((((32,37),35),((((((((51,49),((27,26),(47,41))),31),(((1,56),54),52)),28),((44,45),(18,(19,(24,((25,23),17)))))),(55,50)),48)),(((33,46),36),34)))),(40,14)),(15,((20,21),13)))),(16,4)),53),10),(7,(9,6))),3)[% ] [% ] [%  setBetweenBits = selected ];
	TREE 'Tree 28 from search (criterion: minimize Treelength)' = (((((((22,(((5,12),8),(11,2))),(((43,((((29,(39,38)),30),42),(((32,37),35),(((((((((51,49),((27,26),(47,41))),31),(((1,56),54),52)),28),((44,45),(18,(19,(24,((25,23),17)))))),(55,50)),48),(((33,46),36),34))))),(40,14)),(15,((20,21),13)))),(16,4)),53),10),(7,(9,6))),3)[% ] [% ] [%  setBetweenBits = selected ];
	TREE 'Tree 29 from search (criterion: minimize Treelength)' = (((((((22,(((5,12),8),(11,2))),(((43,((((29,(39,38)),30),42),(((32,37),35),((((33,46),36),((((((((51,49),((27,26),(47,41))),31),(((1,56),54),52)),28),((44,45),(18,(19,(24,((25,23),17)))))),(55,50)),48)),34)))),(40,14)),(15,((20,21),13)))),(16,4)),53),10),(7,(9,6))),3)[% ] [% ] [%  setBetweenBits = selected ];
	TREE 'Tree 30 from search (criterion: minimize Treelength)' = (((((((22,(((5,12),8),(11,2))),(((43,((((29,(39,38)),30),42),(((32,37),35),(((33,46),36),(((((((((51,49),((27,26),(47,41))),31),(((1,56),54),52)),28),((44,45),(18,(19,(24,((25,23),17)))))),(55,50)),48),34))))),(40,14)),(15,((20,21),13)))),(16,4)),53),10),(7,(9,6))),3)[% ] [% ] [%  setBetweenBits = selected ];
	TREE 'Tree 31 from search (criterion: minimize Treelength)' = (((((((22,(((5,12),8),(11,2))),(((((48,43),(((((((51,49),((27,26),(47,41))),31),(((1,56),54),52)),28),((44,45),(18,(19,(24,((25,23),17)))))),(55,50))),((((29,(39,38)),30),42),(((32,37),35),(((33,46),36),34)))),(40,14)),(15,((20,21),13)))),(16,4)),53),10),(7,(9,6))),3)[% ] [% ] [%  setBetweenBits = selected ];
	TREE 'Tree 32 from search (criterion: minimize Treelength)' = (((((((22,(((5,12),8),(11,2))),((((48,((((((((51,49),((27,26),(47,41))),31),(((1,56),54),52)),28),((44,45),(18,(19,(24,((25,23),17)))))),(55,50)),43)),((((29,(39,38)),30),42),(((32,37),35),(((33,46),36),34)))),(40,14)),(15,((20,21),13)))),(16,4)),53),10),(7,(9,6))),3)[% ] [% ] [%  setBetweenBits = selected ];
	TREE 'Tree 33 from search (criterion: minimize Treelength)' = (((((((22,(((5,12),8),(11,2))),(((((((55,50),48),43),((((((51,49),((27,26),(47,41))),31),(((1,56),54),52)),28),((44,45),(18,(19,(24,((25,23),17))))))),((((29,(39,38)),30),42),(((32,37),35),(((33,46),36),34)))),(40,14)),(15,((20,21),13)))),(16,4)),53),10),(7,(9,6))),3)[% ] [% ] [%  setBetweenBits = selected ];
	TREE 'Tree 34 from search (criterion: minimize Treelength)' = (((((((22,(((5,12),8),(11,2))),(((((((55,50),48),((((((51,49),((27,26),(47,41))),31),(((1,56),54),52)),28),((44,45),(18,(19,(24,((25,23),17))))))),43),((((29,(39,38)),30),42),(((32,37),35),(((33,46),36),34)))),(40,14)),(15,((20,21),13)))),(16,4)),53),10),(7,(9,6))),3)[% ] [% ] [%  setBetweenBits = selected ];
	TREE 'Tree 35 from search (criterion: minimize Treelength)' = (((((((22,(((5,12),8),(11,2))),((((((55,50),(((((((51,49),((27,26),(47,41))),31),(((1,56),54),52)),28),((44,45),(18,(19,(24,((25,23),17)))))),48)),43),((((29,(39,38)),30),42),(((32,37),35),(((33,46),36),34)))),(40,14)),(15,((20,21),13)))),(16,4)),53),10),(7,(9,6))),3)[% ] [% ] [%  setBetweenBits = selected ];
	TREE 'Tree 36 from search (criterion: minimize Treelength)' = (((((((22,(((5,12),8),(11,2))),((((((55,50),48),(((((((51,49),((27,26),(47,41))),31),(((1,56),54),52)),28),((44,45),(18,(19,(24,((25,23),17)))))),43)),((((29,(39,38)),30),42),(((32,37),35),(((33,46),36),34)))),(40,14)),(15,((20,21),13)))),(16,4)),53),10),(7,(9,6))),3)[% ] [% ] [%  setBetweenBits = selected ];
	TREE 'Tree 37 from search (criterion: minimize Treelength)' = (((((((22,(((5,12),8),(11,2))),(((((((((44,45),(18,(19,(24,((25,23),17))))),(55,50)),48),43),(((((51,49),((27,26),(47,41))),31),(((1,56),54),52)),28)),((((29,(39,38)),30),42),(((32,37),35),(((33,46),36),34)))),(40,14)),(15,((20,21),13)))),(16,4)),53),10),(7,(9,6))),3)[% ] [% ] [%  setBetweenBits = selected ];
	TREE 'Tree 38 from search (criterion: minimize Treelength)' = (((((((22,(((5,12),8),(11,2))),(((((((((44,45),(18,(19,(24,((25,23),17))))),(55,50)),48),(((((51,49),((27,26),(47,41))),31),(((1,56),54),52)),28)),43),((((29,(39,38)),30),42),(((32,37),35),(((33,46),36),34)))),(40,14)),(15,((20,21),13)))),(16,4)),53),10),(7,(9,6))),3)[% ] [% ] [%  setBetweenBits = selected ];
	TREE 'Tree 39 from search (criterion: minimize Treelength)' = (((((((22,(((5,12),8),(11,2))),(((((((((44,45),(18,(19,(24,((25,23),17))))),(55,50)),(((((51,49),((27,26),(47,41))),31),(((1,56),54),52)),28)),48),43),((((29,(39,38)),30),42),(((32,37),35),(((33,46),36),34)))),(40,14)),(15,((20,21),13)))),(16,4)),53),10),(7,(9,6))),3)[% ] [% ] [%  setBetweenBits = selected ];
	TREE 'Tree 40 from search (criterion: minimize Treelength)' = (((((((22,(((5,12),8),(11,2))),((((((((44,45),(18,(19,(24,((25,23),17))))),((((((51,49),((27,26),(47,41))),31),(((1,56),54),52)),28),(55,50))),48),43),((((29,(39,38)),30),42),(((32,37),35),(((33,46),36),34)))),(40,14)),(15,((20,21),13)))),(16,4)),53),10),(7,(9,6))),3)[% ] [% ] [%  setBetweenBits = selected ];
	TREE 'Tree 41 from search (criterion: minimize Treelength)' = (((((((22,(((5,12),8),(11,2))),((((((((44,45),(18,(19,(24,((25,23),17))))),(55,50)),((((((51,49),((27,26),(47,41))),31),(((1,56),54),52)),28),48)),43),((((29,(39,38)),30),42),(((32,37),35),(((33,46),36),34)))),(40,14)),(15,((20,21),13)))),(16,4)),53),10),(7,(9,6))),3)[% ] [% ] [%  setBetweenBits = selected ];
	TREE 'Tree 42 from search (criterion: minimize Treelength)' = (((((((22,(((5,12),8),(11,2))),((((((((44,45),(18,(19,(24,((25,23),17))))),(55,50)),48),((((((51,49),((27,26),(47,41))),31),(((1,56),54),52)),28),43)),((((29,(39,38)),30),42),(((32,37),35),(((33,46),36),34)))),(40,14)),(15,((20,21),13)))),(16,4)),53),10),(7,(9,6))),3)[% ] [% ] [%  setBetweenBits = selected ];
	TREE 'Tree 43 from search (criterion: minimize Treelength)' = (((((((22,(((5,12),8),(11,2))),((((((((28,((44,45),(18,(19,(24,((25,23),17)))))),(55,50)),48),43),((((51,49),((27,26),(47,41))),31),(((1,56),54),52))),((((29,(39,38)),30),42),(((32,37),35),(((33,46),36),34)))),(40,14)),(15,((20,21),13)))),(16,4)),53),10),(7,(9,6))),3)[% ] [% ] [%  setBetweenBits = selected ];
	TREE 'Tree 44 from search (criterion: minimize Treelength)' = (((((((22,(((5,12),8),(11,2))),((((((((28,((44,45),(18,(19,(24,((25,23),17)))))),(55,50)),48),((((51,49),((27,26),(47,41))),31),(((1,56),54),52))),43),((((29,(39,38)),30),42),(((32,37),35),(((33,46),36),34)))),(40,14)),(15,((20,21),13)))),(16,4)),53),10),(7,(9,6))),3)[% ] [% ] [%  setBetweenBits = selected ];
	TREE 'Tree 45 from search (criterion: minimize Treelength)' = (((((((22,(((5,12),8),(11,2))),((((((((28,((44,45),(18,(19,(24,((25,23),17)))))),(55,50)),((((51,49),((27,26),(47,41))),31),(((1,56),54),52))),48),43),((((29,(39,38)),30),42),(((32,37),35),(((33,46),36),34)))),(40,14)),(15,((20,21),13)))),(16,4)),53),10),(7,(9,6))),3)[% ] [% ] [%  setBetweenBits = selected ];
	TREE 'Tree 46 from search (criterion: minimize Treelength)' = (((((((22,(((5,12),8),(11,2))),((((((((28,((44,45),(18,(19,(24,((25,23),17)))))),((((51,49),((27,26),(47,41))),31),(((1,56),54),52))),(55,50)),48),43),((((29,(39,38)),30),42),(((32,37),35),(((33,46),36),34)))),(40,14)),(15,((20,21),13)))),(16,4)),53),10),(7,(9,6))),3)[% ] [% ] [%  setBetweenBits = selected ];
	TREE 'Tree 47 from search (criterion: minimize Treelength)' = (((((((22,(((5,12),8),(11,2))),(((((((28,(((((51,49),((27,26),(47,41))),31),(((1,56),54),52)),((44,45),(18,(19,(24,((25,23),17))))))),(55,50)),48),43),((((29,(39,38)),30),42),(((32,37),35),(((33,46),36),34)))),(40,14)),(15,((20,21),13)))),(16,4)),53),10),(7,(9,6))),3)[% ] [% ] [%  setBetweenBits = selected ];
	TREE 'Tree 48 from search (criterion: minimize Treelength)' = (((((((22,(((5,12),8),(11,2))),(((((((28,((44,45),(18,(19,(24,((25,23),17)))))),(((((51,49),((27,26),(47,41))),31),(((1,56),54),52)),(55,50))),48),43),((((29,(39,38)),30),42),(((32,37),35),(((33,46),36),34)))),(40,14)),(15,((20,21),13)))),(16,4)),53),10),(7,(9,6))),3)[% ] [% ] [%  setBetweenBits = selected ];
	TREE 'Tree 49 from search (criterion: minimize Treelength)' = (((((((22,(((5,12),8),(11,2))),(((((((28,((44,45),(18,(19,(24,((25,23),17)))))),(55,50)),(((((51,49),((27,26),(47,41))),31),(((1,56),54),52)),48)),43),((((29,(39,38)),30),42),(((32,37),35),(((33,46),36),34)))),(40,14)),(15,((20,21),13)))),(16,4)),53),10),(7,(9,6))),3)[% ] [% ] [%  setBetweenBits = selected ];
	TREE 'Tree 50 from search (criterion: minimize Treelength)' = (((((((22,(((5,12),8),(11,2))),(((((((28,((44,45),(18,(19,(24,((25,23),17)))))),(55,50)),48),(((((51,49),((27,26),(47,41))),31),(((1,56),54),52)),43)),((((29,(39,38)),30),42),(((32,37),35),(((33,46),36),34)))),(40,14)),(15,((20,21),13)))),(16,4)),53),10),(7,(9,6))),3)[% ] [% ] [%  setBetweenBits = selected ];
	TREE 'Tree 51 from search (criterion: minimize Treelength)' = (((((((22,(((5,12),8),(11,2))),((((((((((((1,56),54),(((51,49),((27,26),(47,41))),31)),52),28),((44,45),(18,(19,(24,((25,23),17)))))),(55,50)),48),43),((((29,(39,38)),30),42),(((32,37),35),(((33,46),36),34)))),(40,14)),(15,((20,21),13)))),(16,4)),53),10),(7,(9,6))),3)[% ] [% ] [%  setBetweenBits = selected ];
	TREE 'Tree 52 from search (criterion: minimize Treelength)' = (((((((22,(((5,12),8),(11,2))),((((((((((((1,56),(((51,49),((27,26),(47,41))),31)),54),52),28),((44,45),(18,(19,(24,((25,23),17)))))),(55,50)),48),43),((((29,(39,38)),30),42),(((32,37),35),(((33,46),36),34)))),(40,14)),(15,((20,21),13)))),(16,4)),53),10),(7,(9,6))),3)[% ] [% ] [%  setBetweenBits = selected ];
	TREE 'Tree 53 from search (criterion: minimize Treelength)' = (((((((22,(((5,12),8),(11,2))),((((((((((((1,(((51,49),((27,26),(47,41))),31)),56),54),52),28),((44,45),(18,(19,(24,((25,23),17)))))),(55,50)),48),43),((((29,(39,38)),30),42),(((32,37),35),(((33,46),36),34)))),(40,14)),(15,((20,21),13)))),(16,4)),53),10),(7,(9,6))),3)[% ] [% ] [%  setBetweenBits = selected ];
	TREE 'Tree 54 from search (criterion: minimize Treelength)' = (((((((22,(((5,12),8),(11,2))),(((((((((((1,((((51,49),((27,26),(47,41))),31),56)),54),52),28),((44,45),(18,(19,(24,((25,23),17)))))),(55,50)),48),43),((((29,(39,38)),30),42),(((32,37),35),(((33,46),36),34)))),(40,14)),(15,((20,21),13)))),(16,4)),53),10),(7,(9,6))),3)[% ] [% ] [%  setBetweenBits = selected ];
	TREE 'Tree 55 from search (criterion: minimize Treelength)' = (((((((22,(((5,12),8),(11,2))),(((((((((((1,56),((((51,49),((27,26),(47,41))),31),54)),52),28),((44,45),(18,(19,(24,((25,23),17)))))),(55,50)),48),43),((((29,(39,38)),30),42),(((32,37),35),(((33,46),36),34)))),(40,14)),(15,((20,21),13)))),(16,4)),53),10),(7,(9,6))),3)[% ] [% ] [%  setBetweenBits = selected ];
	TREE 'Tree 56 from search (criterion: minimize Treelength)' = (((((((22,(((5,12),8),(11,2))),(((((((((((1,56),54),((((51,49),((27,26),(47,41))),31),52)),28),((44,45),(18,(19,(24,((25,23),17)))))),(55,50)),48),43),((((29,(39,38)),30),42),(((32,37),35),(((33,46),36),34)))),(40,14)),(15,((20,21),13)))),(16,4)),53),10),(7,(9,6))),3)[% ] [% ] [%  setBetweenBits = selected ];
	TREE 'Tree 57 from search (criterion: minimize Treelength)' = (((((((22,(((5,12),8),(11,2))),((((((((((31,(((1,56),54),52)),((51,49),((27,26),(47,41)))),28),((44,45),(18,(19,(24,((25,23),17)))))),(55,50)),48),43),((((29,(39,38)),30),42),(((32,37),35),(((33,46),36),34)))),(40,14)),(15,((20,21),13)))),(16,4)),53),10),(7,(9,6))),3)[% ] [% ] [%  setBetweenBits = selected ];
	TREE 'Tree 58 from search (criterion: minimize Treelength)' = (((((((22,(((5,12),8),(11,2))),(((((((((31,(((51,49),((27,26),(47,41))),(((1,56),54),52))),28),((44,45),(18,(19,(24,((25,23),17)))))),(55,50)),48),43),((((29,(39,38)),30),42),(((32,37),35),(((33,46),36),34)))),(40,14)),(15,((20,21),13)))),(16,4)),53),10),(7,(9,6))),3)[% ] [% ] [%  setBetweenBits = selected ];
	TREE 'Tree 59 from search (criterion: minimize Treelength)' = (((((((22,(((5,12),8),(11,2))),(((((((((31,((((1,56),54),((51,49),((27,26),(47,41)))),52)),28),((44,45),(18,(19,(24,((25,23),17)))))),(55,50)),48),43),((((29,(39,38)),30),42),(((32,37),35),(((33,46),36),34)))),(40,14)),(15,((20,21),13)))),(16,4)),53),10),(7,(9,6))),3)[% ] [% ] [%  setBetweenBits = selected ];
	TREE 'Tree 60 from search (criterion: minimize Treelength)' = (((((((22,(((5,12),8),(11,2))),(((((((((31,((((1,56),((51,49),((27,26),(47,41)))),54),52)),28),((44,45),(18,(19,(24,((25,23),17)))))),(55,50)),48),43),((((29,(39,38)),30),42),(((32,37),35),(((33,46),36),34)))),(40,14)),(15,((20,21),13)))),(16,4)),53),10),(7,(9,6))),3)[% ] [% ] [%  setBetweenBits = selected ];
	TREE 'Tree 61 from search (criterion: minimize Treelength)' = (((((((22,(((5,12),8),(11,2))),(((((((((31,((((1,((51,49),((27,26),(47,41)))),56),54),52)),28),((44,45),(18,(19,(24,((25,23),17)))))),(55,50)),48),43),((((29,(39,38)),30),42),(((32,37),35),(((33,46),36),34)))),(40,14)),(15,((20,21),13)))),(16,4)),53),10),(7,(9,6))),3)[% ] [% ] [%  setBetweenBits = selected ];
	TREE 'Tree 62 from search (criterion: minimize Treelength)' = (((((((22,(((5,12),8),(11,2))),(((((((((31,(((1,(((51,49),((27,26),(47,41))),56)),54),52)),28),((44,45),(18,(19,(24,((25,23),17)))))),(55,50)),48),43),((((29,(39,38)),30),42),(((32,37),35),(((33,46),36),34)))),(40,14)),(15,((20,21),13)))),(16,4)),53),10),(7,(9,6))),3)[% ] [% ] [%  setBetweenBits = selected ];
	TREE 'Tree 63 from search (criterion: minimize Treelength)' = (((((((22,(((5,12),8),(11,2))),(((((((((31,(((1,56),(((51,49),((27,26),(47,41))),54)),52)),28),((44,45),(18,(19,(24,((25,23),17)))))),(55,50)),48),43),((((29,(39,38)),30),42),(((32,37),35),(((33,46),36),34)))),(40,14)),(15,((20,21),13)))),(16,4)),53),10),(7,(9,6))),3)[% ] [% ] [%  setBetweenBits = selected ];
	TREE 'Tree 64 from search (criterion: minimize Treelength)' = (((((((22,(((5,12),8),(11,2))),(((((((((31,(((1,56),54),(((51,49),((27,26),(47,41))),52))),28),((44,45),(18,(19,(24,((25,23),17)))))),(55,50)),48),43),((((29,(39,38)),30),42),(((32,37),35),(((33,46),36),34)))),(40,14)),(15,((20,21),13)))),(16,4)),53),10),(7,(9,6))),3)[% ] [% ] [%  setBetweenBits = selected ];
	TREE 'Tree 65 from search (criterion: minimize Treelength)' = (((((((22,(((5,12),8),(11,2))),((((((((((((49,((27,26),(47,41))),51),31),(((1,56),54),52)),28),((44,45),(18,(19,(24,((25,23),17)))))),(55,50)),48),43),((((29,(39,38)),30),42),(((32,37),35),(((33,46),36),34)))),(40,14)),(15,((20,21),13)))),(16,4)),53),10),(7,(9,6))),3)[% ] [% ] [%  setBetweenBits = selected ];
	TREE 'Tree 66 from search (criterion: minimize Treelength)' = (((((((22,(((5,12),8),(11,2))),(((((((((((49,(51,((27,26),(47,41)))),31),(((1,56),54),52)),28),((44,45),(18,(19,(24,((25,23),17)))))),(55,50)),48),43),((((29,(39,38)),30),42),(((32,37),35),(((33,46),36),34)))),(40,14)),(15,((20,21),13)))),(16,4)),53),10),(7,(9,6))),3)[% ] [% ] [%  setBetweenBits = selected ];
	TREE 'Tree 67 from search (criterion: minimize Treelength)' = (((((((22,(((5,12),8),(11,2))),((((((((((((51,((27,26),(47,41))),31),(((1,56),54),52)),28),((44,45),(18,(19,(24,((25,23),17)))))),(55,50)),48),43),49),((((29,(39,38)),30),42),(((32,37),35),(((33,46),36),34)))),(40,14)),(15,((20,21),13)))),(16,4)),53),10),(7,(9,6))),3)[% ] [% ] [%  setBetweenBits = selected ];
	TREE 'Tree 68 from search (criterion: minimize Treelength)' = (((((((22,(((5,12),8),(11,2))),((((((((((((51,((27,26),(47,41))),31),(((1,56),54),52)),28),((44,45),(18,(19,(24,((25,23),17)))))),(55,50)),48),49),43),((((29,(39,38)),30),42),(((32,37),35),(((33,46),36),34)))),(40,14)),(15,((20,21),13)))),(16,4)),53),10),(7,(9,6))),3)[% ] [% ] [%  setBetweenBits = selected ];
	TREE 'Tree 69 from search (criterion: minimize Treelength)' = (((((((22,(((5,12),8),(11,2))),((((((((((((51,((27,26),(47,41))),31),(((1,56),54),52)),28),((44,45),(18,(19,(24,((25,23),17)))))),(55,50)),49),48),43),((((29,(39,38)),30),42),(((32,37),35),(((33,46),36),34)))),(40,14)),(15,((20,21),13)))),(16,4)),53),10),(7,(9,6))),3)[% ] [% ] [%  setBetweenBits = selected ];
	TREE 'Tree 70 from search (criterion: minimize Treelength)' = (((((((22,(((5,12),8),(11,2))),((((((((((((51,((27,26),(47,41))),31),(((1,56),54),52)),28),((44,45),(18,(19,(24,((25,23),17)))))),49),(55,50)),48),43),((((29,(39,38)),30),42),(((32,37),35),(((33,46),36),34)))),(40,14)),(15,((20,21),13)))),(16,4)),53),10),(7,(9,6))),3)[% ] [% ] [%  setBetweenBits = selected ];
	TREE 'Tree 71 from search (criterion: minimize Treelength)' = (((((((22,(((5,12),8),(11,2))),((((((((((((51,((27,26),(47,41))),31),(((1,56),54),52)),28),49),((44,45),(18,(19,(24,((25,23),17)))))),(55,50)),48),43),((((29,(39,38)),30),42),(((32,37),35),(((33,46),36),34)))),(40,14)),(15,((20,21),13)))),(16,4)),53),10),(7,(9,6))),3)[% ] [% ] [%  setBetweenBits = selected ];
	TREE 'Tree 72 from search (criterion: minimize Treelength)' = (((((((22,(((5,12),8),(11,2))),((((((((((((51,((27,26),(47,41))),31),(((1,56),54),52)),49),28),((44,45),(18,(19,(24,((25,23),17)))))),(55,50)),48),43),((((29,(39,38)),30),42),(((32,37),35),(((33,46),36),34)))),(40,14)),(15,((20,21),13)))),(16,4)),53),10),(7,(9,6))),3)[% ] [% ] [%  setBetweenBits = selected ];
	TREE 'Tree 73 from search (criterion: minimize Treelength)' = (((((((22,(((5,12),8),(11,2))),((((((((((((51,((27,26),(47,41))),31),49),(((1,56),54),52)),28),((44,45),(18,(19,(24,((25,23),17)))))),(55,50)),48),43),((((29,(39,38)),30),42),(((32,37),35),(((33,46),36),34)))),(40,14)),(15,((20,21),13)))),(16,4)),53),10),(7,(9,6))),3)[% ] [% ] [%  setBetweenBits = selected ];
	TREE 'Tree 74 from search (criterion: minimize Treelength)' = (((((((22,(((5,12),8),(11,2))),(((((((((((51,((27,26),((47,49),41))),31),(((1,56),54),52)),28),((44,45),(18,(19,(24,((25,23),17)))))),(55,50)),48),43),((((29,(39,38)),30),42),(((32,37),35),(((33,46),36),34)))),(40,14)),(15,((20,21),13)))),(16,4)),53),10),(7,(9,6))),3)[% ] [% ] [%  setBetweenBits = selected ];
	TREE 'Tree 75 from search (criterion: minimize Treelength)' = (((((((22,(((5,12),8),(11,2))),(((((((((((51,((27,26),(47,41))),(49,31)),(((1,56),54),52)),28),((44,45),(18,(19,(24,((25,23),17)))))),(55,50)),48),43),((((29,(39,38)),30),42),(((32,37),35),(((33,46),36),34)))),(40,14)),(15,((20,21),13)))),(16,4)),53),10),(7,(9,6))),3)[% ] [% ] [%  setBetweenBits = selected ];
	TREE 'Tree 76 from search (criterion: minimize Treelength)' = (((((((22,(((5,12),8),(11,2))),(((((((((((51,((27,26),(47,41))),31),(49,(((1,56),54),52))),28),((44,45),(18,(19,(24,((25,23),17)))))),(55,50)),48),43),((((29,(39,38)),30),42),(((32,37),35),(((33,46),36),34)))),(40,14)),(15,((20,21),13)))),(16,4)),53),10),(7,(9,6))),3)[% ] [% ] [%  setBetweenBits = selected ];
	TREE 'Tree 77 from search (criterion: minimize Treelength)' = (((((((22,(((5,12),8),(11,2))),(((((((((((51,((27,26),(47,41))),31),((((1,56),54),49),52)),28),((44,45),(18,(19,(24,((25,23),17)))))),(55,50)),48),43),((((29,(39,38)),30),42),(((32,37),35),(((33,46),36),34)))),(40,14)),(15,((20,21),13)))),(16,4)),53),10),(7,(9,6))),3)[% ] [% ] [%  setBetweenBits = selected ];
	TREE 'Tree 78 from search (criterion: minimize Treelength)' = (((((((22,(((5,12),8),(11,2))),(((((((((((51,((27,26),(47,41))),31),((((1,56),49),54),52)),28),((44,45),(18,(19,(24,((25,23),17)))))),(55,50)),48),43),((((29,(39,38)),30),42),(((32,37),35),(((33,46),36),34)))),(40,14)),(15,((20,21),13)))),(16,4)),53),10),(7,(9,6))),3)[% ] [% ] [%  setBetweenBits = selected ];
	TREE 'Tree 79 from search (criterion: minimize Treelength)' = (((((((22,(((5,12),8),(11,2))),(((((((((((51,((27,26),(47,41))),31),((((1,49),56),54),52)),28),((44,45),(18,(19,(24,((25,23),17)))))),(55,50)),48),43),((((29,(39,38)),30),42),(((32,37),35),(((33,46),36),34)))),(40,14)),(15,((20,21),13)))),(16,4)),53),10),(7,(9,6))),3)[% ] [% ] [%  setBetweenBits = selected ];
	TREE 'Tree 80 from search (criterion: minimize Treelength)' = (((((((22,(((5,12),8),(11,2))),(((((((((((51,((27,26),(47,41))),31),(((1,(49,56)),54),52)),28),((44,45),(18,(19,(24,((25,23),17)))))),(55,50)),48),43),((((29,(39,38)),30),42),(((32,37),35),(((33,46),36),34)))),(40,14)),(15,((20,21),13)))),(16,4)),53),10),(7,(9,6))),3)[% ] [% ] [%  setBetweenBits = selected ];
	TREE 'Tree 81 from search (criterion: minimize Treelength)' = (((((((22,(((5,12),8),(11,2))),(((((((((((51,((27,26),(47,41))),31),(((1,56),(49,54)),52)),28),((44,45),(18,(19,(24,((25,23),17)))))),(55,50)),48),43),((((29,(39,38)),30),42),(((32,37),35),(((33,46),36),34)))),(40,14)),(15,((20,21),13)))),(16,4)),53),10),(7,(9,6))),3)[% ] [% ] [%  setBetweenBits = selected ];
	TREE 'Tree 82 from search (criterion: minimize Treelength)' = (((((((22,(((5,12),8),(11,2))),(((((((((((51,((27,26),(47,41))),31),(((1,56),54),(49,52))),28),((44,45),(18,(19,(24,((25,23),17)))))),(55,50)),48),43),((((29,(39,38)),30),42),(((32,37),35),(((33,46),36),34)))),(40,14)),(15,((20,21),13)))),(16,4)),53),10),(7,(9,6))),3)[% ] [% ] [%  setBetweenBits = selected ];
	TREE 'Tree 83 from search (criterion: minimize Treelength)' = (((((((22,(((5,12),8),(11,2))),(((((((((((51,((27,26),(47,41))),31),(((1,56),54),52)),(49,28)),((44,45),(18,(19,(24,((25,23),17)))))),(55,50)),48),43),((((29,(39,38)),30),42),(((32,37),35),(((33,46),36),34)))),(40,14)),(15,((20,21),13)))),(16,4)),53),10),(7,(9,6))),3)[% ] [% ] [%  setBetweenBits = selected ];
	TREE 'Tree 84 from search (criterion: minimize Treelength)' = (((((((22,(((5,12),8),(11,2))),(((((((((((51,((27,26),(47,41))),31),(((1,56),54),52)),28),(49,((44,45),(18,(19,(24,((25,23),17))))))),(55,50)),48),43),((((29,(39,38)),30),42),(((32,37),35),(((33,46),36),34)))),(40,14)),(15,((20,21),13)))),(16,4)),53),10),(7,(9,6))),3)[% ] [% ] [%  setBetweenBits = selected ];
	TREE 'Tree 85 from search (criterion: minimize Treelength)' = (((((((22,(((5,12),8),(11,2))),(((((((((((51,((27,26),(47,41))),31),(((1,56),54),52)),28),(((44,45),49),(18,(19,(24,((25,23),17)))))),(55,50)),48),43),((((29,(39,38)),30),42),(((32,37),35),(((33,46),36),34)))),(40,14)),(15,((20,21),13)))),(16,4)),53),10),(7,(9,6))),3)[% ] [% ] [%  setBetweenBits = selected ];
	TREE 'Tree 86 from search (criterion: minimize Treelength)' = (((((((22,(((5,12),8),(11,2))),(((((((((((51,((27,26),(47,41))),31),(((1,56),54),52)),28),((44,45),(49,(18,(19,(24,((25,23),17))))))),(55,50)),48),43),((((29,(39,38)),30),42),(((32,37),35),(((33,46),36),34)))),(40,14)),(15,((20,21),13)))),(16,4)),53),10),(7,(9,6))),3)[% ] [% ] [%  setBetweenBits = selected ];
	TREE 'Tree 87 from search (criterion: minimize Treelength)' = (((((((22,(((5,12),8),(11,2))),(((((((((((51,((27,26),(47,41))),31),(((1,56),54),52)),28),((44,45),(18,(19,(24,((25,23),17)))))),(49,(55,50))),48),43),((((29,(39,38)),30),42),(((32,37),35),(((33,46),36),34)))),(40,14)),(15,((20,21),13)))),(16,4)),53),10),(7,(9,6))),3)[% ] [% ] [%  setBetweenBits = selected ];
	TREE 'Tree 88 from search (criterion: minimize Treelength)' = (((((((22,(((5,12),8),(11,2))),(((((((((((51,((27,26),(47,41))),31),(((1,56),54),52)),28),((44,45),(18,(19,(24,((25,23),17)))))),(55,50)),(49,48)),43),((((29,(39,38)),30),42),(((32,37),35),(((33,46),36),34)))),(40,14)),(15,((20,21),13)))),(16,4)),53),10),(7,(9,6))),3)[% ] [% ] [%  setBetweenBits = selected ];
	TREE 'Tree 89 from search (criterion: minimize Treelength)' = (((((((22,(((5,12),8),(11,2))),(((((((((((51,((27,26),(47,41))),31),(((1,56),54),52)),28),((44,45),(18,(19,(24,((25,23),17)))))),(55,50)),48),(49,43)),((((29,(39,38)),30),42),(((32,37),35),(((33,46),36),34)))),(40,14)),(15,((20,21),13)))),(16,4)),53),10),(7,(9,6))),3)[% ] [% ] [%  setBetweenBits = selected ];
	TREE 'Tree 90 from search (criterion: minimize Treelength)' = (((((((22,(((5,12),8),(11,2))),((((((((((((51,49),((47,(27,26)),41)),31),(((1,56),54),52)),28),((44,45),(18,(19,(24,((25,23),17)))))),(55,50)),48),43),((((29,(39,38)),30),42),(((32,37),35),(((33,46),36),34)))),(40,14)),(15,((20,21),13)))),(16,4)),53),10),(7,(9,6))),3)[% ] [% ] [%  setBetweenBits = selected ];
	TREE 'Tree 91 from search (criterion: minimize Treelength)' = (((((((22,(((5,12),8),(11,2))),((((((((((((51,49),(47,((27,26),41))),31),(((1,56),54),52)),28),((44,45),(18,(19,(24,((25,23),17)))))),(55,50)),48),43),((((29,(39,38)),30),42),(((32,37),35),(((33,46),36),34)))),(40,14)),(15,((20,21),13)))),(16,4)),53),10),(7,(9,6))),3)[% ] [% ] [%  setBetweenBits = selected ];
	TREE 'Tree 92 from search (criterion: minimize Treelength)' = (((((((22,(((5,12),8),(11,2))),((((((((((((51,49),(27,(47,41))),31),(((1,56),54),52)),28),((44,45),(18,(19,(24,((25,23),17)))))),(55,50)),48),(26,43)),((((29,(39,38)),30),42),(((32,37),35),(((33,46),36),34)))),(40,14)),(15,((20,21),13)))),(16,4)),53),10),(7,(9,6))),3)[% ] [% ] [%  setBetweenBits = selected ];
	TREE 'Tree 93 from search (criterion: minimize Treelength)' = (((((((22,(((5,12),8),(11,2))),((((((((((((51,(47,49)),((27,26),41)),31),(((1,56),54),52)),28),((44,45),(18,(19,(24,((25,23),17)))))),(55,50)),48),43),((((29,(39,38)),30),42),(((32,37),35),(((33,46),36),34)))),(40,14)),(15,((20,21),13)))),(16,4)),53),10),(7,(9,6))),3)[% ] [% ] [%  setBetweenBits = selected ];
	TREE 'Tree 94 from search (criterion: minimize Treelength)' = (((((((22,(((5,12),8),(11,2))),((((((((((((51,49),((27,26),41)),31),(((1,56),54),52)),28),((44,45),(18,(19,(24,((25,23),17)))))),(55,50)),(47,48)),43),((((29,(39,38)),30),42),(((32,37),35),(((33,46),36),34)))),(40,14)),(15,((20,21),13)))),(16,4)),53),10),(7,(9,6))),3)[% ] [% ] [%  setBetweenBits = selected ];
	TREE 'Tree 95 from search (criterion: minimize Treelength)' = (((((((22,(((5,12),8),(11,2))),(((((((((((51,49),((27,26),(47,41))),((((1,56),54),31),52)),28),((44,45),(18,(19,(24,((25,23),17)))))),(55,50)),48),43),((((29,(39,38)),30),42),(((32,37),35),(((33,46),36),34)))),(40,14)),(15,((20,21),13)))),(16,4)),53),10),(7,(9,6))),3)[% ] [% ] [%  setBetweenBits = selected ];
	TREE 'Tree 96 from search (criterion: minimize Treelength)' = (((((((22,(((5,12),8),(11,2))),(((((((((((51,49),((27,26),(47,41))),((((1,56),31),54),52)),28),((44,45),(18,(19,(24,((25,23),17)))))),(55,50)),48),43),((((29,(39,38)),30),42),(((32,37),35),(((33,46),36),34)))),(40,14)),(15,((20,21),13)))),(16,4)),53),10),(7,(9,6))),3)[% ] [% ] [%  setBetweenBits = selected ];
	TREE 'Tree 97 from search (criterion: minimize Treelength)' = (((((((22,(((5,12),8),(11,2))),(((((((((((51,49),((27,26),(47,41))),((((1,31),56),54),52)),28),((44,45),(18,(19,(24,((25,23),17)))))),(55,50)),48),43),((((29,(39,38)),30),42),(((32,37),35),(((33,46),36),34)))),(40,14)),(15,((20,21),13)))),(16,4)),53),10),(7,(9,6))),3)[% ] [% ] [%  setBetweenBits = selected ];
	TREE 'Tree 98 from search (criterion: minimize Treelength)' = (((((((22,(((5,12),8),(11,2))),(((((((((((51,49),((27,26),(47,41))),(((1,(31,56)),54),52)),28),((44,45),(18,(19,(24,((25,23),17)))))),(55,50)),48),43),((((29,(39,38)),30),42),(((32,37),35),(((33,46),36),34)))),(40,14)),(15,((20,21),13)))),(16,4)),53),10),(7,(9,6))),3)[% ] [% ] [%  setBetweenBits = selected ];
	TREE 'Tree 99 from search (criterion: minimize Treelength)' = (((((((22,(((5,12),8),(11,2))),(((((((((((51,49),((27,26),(47,41))),(((1,56),(31,54)),52)),28),((44,45),(18,(19,(24,((25,23),17)))))),(55,50)),48),43),((((29,(39,38)),30),42),(((32,37),35),(((33,46),36),34)))),(40,14)),(15,((20,21),13)))),(16,4)),53),10),(7,(9,6))),3)[% ] [% ] [%  setBetweenBits = selected ];
	TREE 'Tree 100 from search (criterion: minimize Treelength)' = (((((((22,(((5,12),8),(11,2))),(((((((((((51,49),((27,26),(47,41))),(((1,56),54),(31,52))),28),((44,45),(18,(19,(24,((25,23),17)))))),(55,50)),48),43),((((29,(39,38)),30),42),(((32,37),35),(((33,46),36),34)))),(40,14)),(15,((20,21),13)))),(16,4)),53),10),(7,(9,6))),3)[% ] [% ] [%  setBetweenBits = selected ];

END;


Begin MESQUITE;
		MESQUITESCRIPTVERSION 2;
		TITLE AUTO;
		tell ProjectCoordinator;
		timeSaved 1506850170751;
		getEmployee #mesquite.minimal.ManageTaxa.ManageTaxa;
		tell It;
			setID 0 7627159757088054925;
		endTell;
		getEmployee #mesquite.charMatrices.ManageCharacters.ManageCharacters;
		tell It;
			setID 0 8652449150601521815;
			mqVersion 331;
			checksumv 0 3 1682550644 null  getNumChars 16 numChars 16 getNumTaxa 56 numTaxa 56   short true   bits 1023   states 1023   sumSquaresStatesOnly 8230685.0 sumSquares 8230685.0 longCompressibleToShort false usingShortMatrix true   NumFiles 1 NumMatrices 1;
			mqVersion;
		endTell;
		getWindow;
		tell It;
			suppress;
			setResourcesState false true 139;
			setPopoutState 300;
			setExplanationSize 0;
			setAnnotationSize 0;
			setFontIncAnnot 0;
			setFontIncExp 0;
			setSize 1374 735;
			setLocation 27 63;
			setFont SanSerif;
			setFontSize 10;
			getToolPalette;
			tell It;
			endTell;
			desuppress;
		endTell;
		getEmployee  #mesquite.minimal.ManageTaxa.ManageTaxa;
		tell It;
			showTaxa #7627159757088054925 #mesquite.lists.TaxonList.TaxonList;
			tell It;
				setTaxa #7627159757088054925;
				getWindow;
				tell It;
					useTargetValue off;
					setTargetValue ;
					newAssistant  #mesquite.lists.TaxonListCurrPartition.TaxonListCurrPartition;
					setExplanationSize 30;
					setAnnotationSize 20;
					setFontIncAnnot 0;
					setFontIncExp 0;
					setSize 1374 663;
					setLocation 27 63;
					setFont SanSerif;
					setFontSize 10;
					getToolPalette;
					tell It;
						setTool mesquite.lists.TaxonList.TaxonListWindow.arrow;
					endTell;
				endTell;
				showWindow;
				getEmployee #mesquite.lists.ColorTaxon.ColorTaxon;
				tell It;
					setColor Red;
					removeColor off;
				endTell;
				getEmployee #mesquite.lists.TaxonListAnnotPanel.TaxonListAnnotPanel;
				tell It;
					togglePanel off;
				endTell;
			endTell;
		endTell;
		getEmployee  #mesquite.trees.BasicTreeWindowCoord.BasicTreeWindowCoord;
		tell It;
			makeTreeWindow #7627159757088054925  #mesquite.trees.BasicTreeWindowMaker.BasicTreeWindowMaker;
			tell It;
				suppressEPCResponse;
				setTreeSource  #mesquite.trees.StoredTrees.StoredTrees;
				tell It;
					setTreeBlock 1;
					setTreeBlockID 015eb2fcea281;
					toggleUseWeights off;
				endTell;
				setAssignedID 1089.1506244480753.2875045255882164094;
				getTreeWindow;
				tell It;
					setExplanationSize 30;
					setAnnotationSize 20;
					setFontIncAnnot 0;
					setFontIncExp 0;
					setSize 1374 663;
					setLocation 27 63;
					setFont SanSerif;
					setFontSize 10;
					getToolPalette;
					tell It;
						setTool mesquite.trees.BasicTreeWindowMaker.BasicTreeWindow.reroot;
					endTell;
					getTreeDrawCoordinator #mesquite.trees.BasicTreeDrawCoordinator.BasicTreeDrawCoordinator;
				tell It;
					suppress;
					setTreeDrawer  #mesquite.trees.SquareLineTree.SquareLineTree;
					tell It;
						setNodeLocs #mesquite.trees.NodeLocsStandard.NodeLocsStandard;
						tell It;
							branchLengthsToggle off;
							toggleScale on;
							toggleBroadScale off;
							toggleCenter on;
							toggleEven on;
							setFixedTaxonDistance 0;
						endTell;
						setEdgeWidth 4;
						showEdgeLines on;
						orientUp;
					endTell;
					setBackground White;
					setBranchColor Black;
					showNodeNumbers off;
					showBranchColors on;
					labelBranchLengths off;
					centerBrLenLabels on;
					showBrLensUnspecified on;
					showBrLenLabelsOnTerminals on;
					setBrLenLabelColor 0 0 255;
					setNumBrLenDecimals 6;
					desuppress;
					getEmployee #mesquite.trees.BasicDrawTaxonNames.BasicDrawTaxonNames;
					tell It;
						setColor Black;
						toggleColorPartition off;
						toggleColorAssigned on;
						toggleShadePartition off;
						toggleShowFootnotes on;
						toggleNodeLabels on;
						toggleCenterNodeNames off;
						toggleShowNames on;
						namesAngle ?;
					endTell;
				endTell;
					setTreeNumber 1;
					setDrawingSizeMode 0;
					toggleLegendFloat on;
					scale 0;
					toggleTextOnTree off;
					togglePrintName on;
					showWindow;
				endTell;
				desuppressEPCResponse;
				getEmployee #mesquite.trees.ColorBranches.ColorBranches;
				tell It;
					setColor Red;
					removeColor off;
				endTell;
				getEmployee #mesquite.ornamental.BranchNotes.BranchNotes;
				tell It;
					setAlwaysOn off;
				endTell;
				getEmployee #mesquite.ornamental.ColorTreeByPartition.ColorTreeByPartition;
				tell It;
					colorByPartition off;
				endTell;
				getEmployee #mesquite.ornamental.DrawTreeAssocDoubles.DrawTreeAssocDoubles;
				tell It;
					setOn on;
					toggleShow consensusFrequency;
					toggleShow posteriorProbability;
					toggleShow bootstrapFrequency;
					toggleShow consensusFrequency;
					toggleShow posteriorProbability;
					toggleShow bootstrapFrequency;
					setDigits 4;
					setThreshold ?;
					writeAsPercentage off;
					toggleCentred off;
					toggleHorizontal on;
					toggleWhiteEdges on;
					toggleShowOnTerminals on;
					setFontSize 10;
					setOffset 0  0;
				endTell;
				getEmployee #mesquite.ornamental.DrawTreeAssocStrings.DrawTreeAssocStrings;
				tell It;
					setOn on;
					toggleCentred on;
					toggleHorizontal on;
					setFontSize 10;
					setOffset 0  0;
					toggleShowOnTerminals on;
				endTell;
				getEmployee #mesquite.trees.TreeInfoValues.TreeInfoValues;
				tell It;
					panelOpen false;
				endTell;
			endTell;
			makeTreeWindow #7627159757088054925  #mesquite.trees.BasicTreeWindowMaker.BasicTreeWindowMaker;
			tell It;
				suppressEPCResponse;
				setTreeSource  #mesquite.trees.StoredTrees.StoredTrees;
				tell It;
					setTreeBlock 2;
					setTreeBlockID 015eb33ba8b34;
					toggleUseWeights off;
				endTell;
				setAssignedID 1140.1506245599873.4373773935574244563;
				getTreeWindow;
				tell It;
					setExplanationSize 50;
					setAnnotationSize 20;
					setFontIncAnnot 0;
					setFontIncExp 0;
					setSize 1374 643;
					setLocation 27 63;
					setFont SanSerif;
					setFontSize 10;
					getToolPalette;
					tell It;
						setTool mesquite.trees.BasicTreeWindowMaker.BasicTreeWindow.zoom;
					endTell;
					getTreeDrawCoordinator #mesquite.trees.BasicTreeDrawCoordinator.BasicTreeDrawCoordinator;
				tell It;
					suppress;
					setTreeDrawer  #mesquite.cont.PlotTree.PlotTree;
					tell It;
						setEdgeWidth 4;
						setNodeLocs  #mesquite.cont.NodeLocs2DPlot.NodeLocs2DPlot;
						tell It;
							hide;
							setAxis  #mesquite.cont.MapContinuous.MapContinuous;
							tell It;
								getCharacterSource  #mesquite.charMatrices.CharSrcCoordObed.CharSrcCoordObed;
								tell It;
									setCharacterSource #mesquite.stochchar.SimulatedCharacters.SimulatedCharacters;
									tell It;
										setSeed 1506245838617;
										setCharacterSimulator  #mesquite.stochchar.EvolveContinuous.EvolveContinuous;
										tell It;
											setModelByName Brownian_default;
										endTell;
										getTreeSource  #mesquite.trees.TreeOfContext.TreeOfContext;
										tell It;
											setContextID 1140.1506245599873.4373773935574244563;
										endTell;
									endTell;
								endTell;
								setCharacter 2;
								setItem 0;
								getEmployee #mesquite.parsimony.ParsAncestralStates.ParsAncestralStates;
								tell It;
									setModelSource  #mesquite.parsimony.CurrentParsModels.CurrentParsModels;
									tell It;
										setDefaultModel 13;
									endTell;
									toggleMPRsMode off;
									getEmployee #mesquite.parsimony.ParsimonySquared.ParsimonySquared;
									tell It;
										toggleWeight on;
									endTell;
								endTell;
							endTell;
							toggleShowLegend on;
							setCurrentX 1;
							setCurrentY 2;
							show;
						endTell;
						setSpotDiameter 16;
						toggleShowTerminals on;
						toggleShowInternals on;
						toggleShowTree on;
					endTell;
					setBackground White;
					setBranchColor Black;
					showNodeNumbers off;
					showBranchColors on;
					labelBranchLengths off;
					centerBrLenLabels on;
					showBrLensUnspecified on;
					showBrLenLabelsOnTerminals on;
					setBrLenLabelColor 0 0 255;
					setNumBrLenDecimals 6;
					desuppress;
					getEmployee #mesquite.trees.BasicDrawTaxonNames.BasicDrawTaxonNames;
					tell It;
						setColor Black;
						toggleColorPartition off;
						toggleColorAssigned on;
						toggleShadePartition off;
						toggleShowFootnotes on;
						toggleNodeLabels on;
						toggleCenterNodeNames off;
						toggleShowNames on;
						namesAngle ?;
					endTell;
				endTell;
					setTreeNumber 1;
					setTree '(30,((29,(38,39)<consensusFrequency = 1 >)<consensusFrequency = 1 >,(42,(((35,(32,37)<consensusFrequency = 1 >)<consensusFrequency = 1 >,(34,(36,(33,46)<consensusFrequency = 1 >)<consensusFrequency = 1 >)<consensusFrequency = 0.96 >)<consensusFrequency = 0.92 >,(((14,40)<consensusFrequency = 0.98 >,((15,(13,(20,21)<consensusFrequency = 1 >)<consensusFrequency = 0.97 >)<consensusFrequency = 0.95 >,((22,((2,11)<consensusFrequency = 0.98 >,(8,(5,12)<consensusFrequency = 1 >)<consensusFrequency = 1 >)<consensusFrequency = 1 >)<consensusFrequency = 1 >,((4,16)<consensusFrequency = 1 >,(53,(10,(3<consensusFrequency = 0.95 >,(7,(6,9)<consensusFrequency = 1 >)<consensusFrequency = 1 >)<consensusFrequency = 0.95 >)<consensusFrequency = 0.99 >)<consensusFrequency = 0.99 >)<consensusFrequency = 0.99 >)<consensusFrequency = 0.99 >)<consensusFrequency = 0.98 >)<consensusFrequency = 0.99 >,(43,(48,((50,55)<consensusFrequency = 1 >,(((44,45)<consensusFrequency = 1 >,(18,(19,(24,(17,(23,25)<consensusFrequency = 1 >)<consensusFrequency = 1 >)<consensusFrequency = 1 >)<consensusFrequency = 1 >)<consensusFrequency = 1 >)<consensusFrequency = 0.98 >,(28,((52,(54,(1,56)<consensusFrequency = 0.92 >)<consensusFrequency = 0.84 >)<consensusFrequency = 0.76 >,(31,((49,51)<consensusFrequency = 0.74 >,((26,27)<consensusFrequency = 0.99 >,(41,47)<consensusFrequency = 0.95 >)<consensusFrequency = 0.96 >)<consensusFrequency = 0.76 >)<consensusFrequency = 0.64 >)<consensusFrequency = 0.86 >)<consensusFrequency = 0.8 >)<consensusFrequency = 0.8 >)<consensusFrequency = 0.82 >)<consensusFrequency = 0.89 >)<consensusFrequency = 0.92 >)<consensusFrequency = 0.87 >)<consensusFrequency = 0.99 >)<consensusFrequency = 0.99 >))<consensusFrequency = 1 > <> <  setBetweenDouble = consensusFrequency >;';
					setDrawingSizeMode 0;
					toggleLegendFloat on;
					scale 10;
					toggleTextOnTree off;
					togglePrintName on;
					showWindow;
					newAssistant  #mesquite.ancstates.TraceCharacterHistory.TraceCharacterHistory;
				tell It;
					suspend ;
					setDisplayMode  #mesquite.ancstates.ShadeStatesOnTree.ShadeStatesOnTree;
					tell It;
						toggleLabels off;
						togglePredictions off;
						toggleGray off;
					endTell;
					setHistorySource  #mesquite.ancstates.RecAncestralStates.RecAncestralStates;
					tell It;
						getCharacterSource  #mesquite.charMatrices.CharSrcCoordObed.CharSrcCoordObed;
						tell It;
							setCharacterSource #mesquite.charMatrices.StoredCharacters.StoredCharacters;
							tell It;
								setDataSet #8652449150601521815;
							endTell;
						endTell;
						setMethod  #mesquite.parsimony.ParsAncestralStates.ParsAncestralStates;
						tell It;
							setModelSource  #mesquite.parsimony.CurrentParsModels.CurrentParsModels;
							toggleMPRsMode off;
						endTell;
						toggleShowSelectedOnly off;
					endTell;
					setCharacter 1;
					setMapping 1;
					toggleShowLegend on;
					setColorMode 0;
					toggleWeights on;
					setInitialOffsetX 1144;
					setInitialOffsetY -209;
					setLegendWidth 142;
					setLegendHeight 129;
					resume ;
				endTell;
				endTell;
				desuppressEPCResponse;
				getEmployee #mesquite.trees.ColorBranches.ColorBranches;
				tell It;
					setColor Red;
					removeColor off;
				endTell;
				getEmployee #mesquite.ornamental.BranchNotes.BranchNotes;
				tell It;
					setAlwaysOn off;
				endTell;
				getEmployee #mesquite.ornamental.ColorTreeByPartition.ColorTreeByPartition;
				tell It;
					colorByPartition off;
				endTell;
				getEmployee #mesquite.ornamental.DrawTreeAssocDoubles.DrawTreeAssocDoubles;
				tell It;
					setOn on;
					toggleShow consensusFrequency;
					toggleShow posteriorProbability;
					toggleShow bootstrapFrequency;
					toggleShow consensusFrequency;
					toggleShow posteriorProbability;
					toggleShow bootstrapFrequency;
					setDigits 4;
					setThreshold ?;
					writeAsPercentage off;
					toggleCentred off;
					toggleHorizontal on;
					toggleWhiteEdges on;
					toggleShowOnTerminals on;
					setFontSize 10;
					setOffset 0  0;
				endTell;
				getEmployee #mesquite.ornamental.DrawTreeAssocStrings.DrawTreeAssocStrings;
				tell It;
					setOn on;
					toggleCentred on;
					toggleHorizontal on;
					setFontSize 10;
					setOffset 0  0;
					toggleShowOnTerminals on;
				endTell;
				getEmployee #mesquite.trees.TreeInfoValues.TreeInfoValues;
				tell It;
					panelOpen false;
				endTell;
			endTell;
			makeTreeWindow #7627159757088054925  #mesquite.trees.BasicTreeWindowMaker.BasicTreeWindowMaker;
			tell It;
				suppressEPCResponse;
				setTreeSource  #mesquite.trees.StoredTrees.StoredTrees;
				tell It;
					setTreeBlock 3;
					setTreeBlockID 015eb34dc8175;
					toggleUseWeights off;
				endTell;
				setAssignedID 1196.1506246796880.3830224575934450866;
				getTreeWindow;
				tell It;
					setExplanationSize 30;
					setAnnotationSize 20;
					setFontIncAnnot 0;
					setFontIncExp 0;
					setSize 1374 663;
					setLocation 27 63;
					setFont SanSerif;
					setFontSize 10;
					getToolPalette;
					tell It;
						setTool mesquite.trees.BasicTreeWindowMaker.BasicTreeWindow.reroot;
					endTell;
					getTreeDrawCoordinator #mesquite.trees.BasicTreeDrawCoordinator.BasicTreeDrawCoordinator;
				tell It;
					suppress;
					setTreeDrawer  #mesquite.trees.SquareLineTree.SquareLineTree;
					tell It;
						setNodeLocs #mesquite.trees.NodeLocsStandard.NodeLocsStandard;
						tell It;
							branchLengthsToggle off;
							toggleScale on;
							toggleBroadScale off;
							toggleCenter on;
							toggleEven on;
							setFixedTaxonDistance 0;
						endTell;
						setEdgeWidth 4;
						showEdgeLines on;
						orientUp;
					endTell;
					setBackground White;
					setBranchColor Black;
					showNodeNumbers off;
					showBranchColors on;
					labelBranchLengths off;
					centerBrLenLabels on;
					showBrLensUnspecified on;
					showBrLenLabelsOnTerminals on;
					setBrLenLabelColor 0 0 255;
					setNumBrLenDecimals 6;
					desuppress;
					getEmployee #mesquite.trees.BasicDrawTaxonNames.BasicDrawTaxonNames;
					tell It;
						setColor Black;
						toggleColorPartition off;
						toggleColorAssigned on;
						toggleShadePartition off;
						toggleShowFootnotes on;
						toggleNodeLabels on;
						toggleCenterNodeNames off;
						toggleShowNames on;
						namesAngle ?;
					endTell;
				endTell;
					setTreeNumber 1;
					setTree '(30,((29,(38,39)<consensusFrequency = 1 >)<consensusFrequency = 1 >,(42,(((35,(32,37)<consensusFrequency = 1 >)<consensusFrequency = 1 >,(34,(36,(33,46)<consensusFrequency = 1 >)<consensusFrequency = 1 >)<consensusFrequency = 0.96 >)<consensusFrequency = 0.92 >,(((14,40)<consensusFrequency = 0.98 >,((15,(13,(20,21)<consensusFrequency = 1 >)<consensusFrequency = 0.97 >)<consensusFrequency = 0.95 >,((22,((2,11)<consensusFrequency = 0.98 >,(8,(5,12)<consensusFrequency = 1 >)<consensusFrequency = 1 >)<consensusFrequency = 1 >)<consensusFrequency = 1 >,((4,16)<consensusFrequency = 1 >,(53,(10,(3<consensusFrequency = 0.95 >,(7,(6,9)<consensusFrequency = 1 >)<consensusFrequency = 1 >)<consensusFrequency = 0.95 >)<consensusFrequency = 0.99 >)<consensusFrequency = 0.99 >)<consensusFrequency = 0.99 >)<consensusFrequency = 0.99 >)<consensusFrequency = 0.98 >)<consensusFrequency = 0.99 >,(43,(48,((50,55)<consensusFrequency = 1 >,(((44,45)<consensusFrequency = 1 >,(18,(19,(24,(17,(23,25)<consensusFrequency = 1 >)<consensusFrequency = 1 >)<consensusFrequency = 1 >)<consensusFrequency = 1 >)<consensusFrequency = 1 >)<consensusFrequency = 0.98 >,(28,((52,(54,(1,56)<consensusFrequency = 0.92 >)<consensusFrequency = 0.84 >)<consensusFrequency = 0.76 >,(31,((49,51)<consensusFrequency = 0.74 >,((26,27)<consensusFrequency = 0.99 >,(41,47)<consensusFrequency = 0.95 >)<consensusFrequency = 0.96 >)<consensusFrequency = 0.76 >)<consensusFrequency = 0.64 >)<consensusFrequency = 0.86 >)<consensusFrequency = 0.8 >)<consensusFrequency = 0.8 >)<consensusFrequency = 0.82 >)<consensusFrequency = 0.89 >)<consensusFrequency = 0.92 >)<consensusFrequency = 0.87 >)<consensusFrequency = 0.99 >)<consensusFrequency = 0.99 >))<consensusFrequency = 1 > <> <  setBetweenDouble = consensusFrequency >;';
					setDrawingSizeMode 0;
					toggleLegendFloat on;
					scale 0;
					toggleTextOnTree off;
					togglePrintName on;
					showWindow;
				endTell;
				desuppressEPCResponse;
				getEmployee #mesquite.trees.ColorBranches.ColorBranches;
				tell It;
					setColor Red;
					removeColor off;
				endTell;
				getEmployee #mesquite.ornamental.BranchNotes.BranchNotes;
				tell It;
					setAlwaysOn off;
				endTell;
				getEmployee #mesquite.ornamental.ColorTreeByPartition.ColorTreeByPartition;
				tell It;
					colorByPartition off;
				endTell;
				getEmployee #mesquite.ornamental.DrawTreeAssocDoubles.DrawTreeAssocDoubles;
				tell It;
					setOn on;
					toggleShow consensusFrequency;
					toggleShow posteriorProbability;
					toggleShow bootstrapFrequency;
					toggleShow consensusFrequency;
					toggleShow posteriorProbability;
					toggleShow bootstrapFrequency;
					setDigits 4;
					setThreshold ?;
					writeAsPercentage off;
					toggleCentred off;
					toggleHorizontal on;
					toggleWhiteEdges on;
					toggleShowOnTerminals on;
					setFontSize 10;
					setOffset 0  0;
				endTell;
				getEmployee #mesquite.ornamental.DrawTreeAssocStrings.DrawTreeAssocStrings;
				tell It;
					setOn on;
					toggleCentred on;
					toggleHorizontal on;
					setFontSize 10;
					setOffset 0  0;
					toggleShowOnTerminals on;
				endTell;
				getEmployee #mesquite.trees.TreeInfoValues.TreeInfoValues;
				tell It;
					panelOpen false;
				endTell;
			endTell;
			makeTreeWindow #7627159757088054925  #mesquite.trees.BasicTreeWindowMaker.BasicTreeWindowMaker;
			tell It;
				suppressEPCResponse;
				setTreeSource  #mesquite.trees.StoredTrees.StoredTrees;
				tell It;
					setTreeBlock 4;
					setTreeBlockID 015ec9e081f77;
					toggleUseWeights off;
				endTell;
				setAssignedID 1198.1506629076391.6675947946619903970;
				getTreeWindow;
				tell It;
					setExplanationSize 30;
					setAnnotationSize 20;
					setFontIncAnnot 0;
					setFontIncExp 0;
					setSize 1374 663;
					setLocation 27 63;
					setFont SanSerif;
					setFontSize 10;
					getToolPalette;
					tell It;
					endTell;
					getTreeDrawCoordinator #mesquite.trees.BasicTreeDrawCoordinator.BasicTreeDrawCoordinator;
				tell It;
					suppress;
					setTreeDrawer  #mesquite.trees.SquareLineTree.SquareLineTree;
					tell It;
						setNodeLocs #mesquite.trees.NodeLocsStandard.NodeLocsStandard;
						tell It;
							branchLengthsToggle off;
							toggleScale on;
							toggleBroadScale off;
							toggleCenter on;
							toggleEven on;
							setFixedTaxonDistance 0;
						endTell;
						setEdgeWidth 4;
						showEdgeLines on;
						orientUp;
					endTell;
					setBackground White;
					setBranchColor Black;
					showNodeNumbers off;
					showBranchColors on;
					labelBranchLengths off;
					centerBrLenLabels on;
					showBrLensUnspecified on;
					showBrLenLabelsOnTerminals on;
					setBrLenLabelColor 0 0 255;
					setNumBrLenDecimals 6;
					desuppress;
					getEmployee #mesquite.trees.BasicDrawTaxonNames.BasicDrawTaxonNames;
					tell It;
						setColor Black;
						toggleColorPartition off;
						toggleColorAssigned on;
						toggleShadePartition off;
						toggleShowFootnotes on;
						toggleNodeLabels on;
						toggleCenterNodeNames off;
						toggleShowNames on;
						namesAngle ?;
					endTell;
				endTell;
					setTreeNumber 1;
					setDrawingSizeMode 0;
					toggleLegendFloat on;
					scale 0;
					toggleTextOnTree off;
					togglePrintName on;
					showWindow;
				endTell;
				desuppressEPCResponse;
				getEmployee #mesquite.trees.ColorBranches.ColorBranches;
				tell It;
					setColor Red;
					removeColor off;
				endTell;
				getEmployee #mesquite.ornamental.BranchNotes.BranchNotes;
				tell It;
					setAlwaysOn off;
				endTell;
				getEmployee #mesquite.ornamental.ColorTreeByPartition.ColorTreeByPartition;
				tell It;
					colorByPartition off;
				endTell;
				getEmployee #mesquite.ornamental.DrawTreeAssocDoubles.DrawTreeAssocDoubles;
				tell It;
					setOn on;
					toggleShow consensusFrequency;
					toggleShow posteriorProbability;
					toggleShow bootstrapFrequency;
					toggleShow consensusFrequency;
					toggleShow posteriorProbability;
					toggleShow bootstrapFrequency;
					setDigits 4;
					setThreshold ?;
					writeAsPercentage off;
					toggleCentred off;
					toggleHorizontal on;
					toggleWhiteEdges on;
					toggleShowOnTerminals on;
					setFontSize 10;
					setOffset 0  0;
				endTell;
				getEmployee #mesquite.ornamental.DrawTreeAssocStrings.DrawTreeAssocStrings;
				tell It;
					setOn on;
					toggleCentred on;
					toggleHorizontal on;
					setFontSize 10;
					setOffset 0  0;
					toggleShowOnTerminals on;
				endTell;
				getEmployee #mesquite.trees.TreeInfoValues.TreeInfoValues;
				tell It;
					panelOpen false;
				endTell;
			endTell;
			makeTreeWindow #7627159757088054925  #mesquite.trees.BasicTreeWindowMaker.BasicTreeWindowMaker;
			tell It;
				suppressEPCResponse;
				setTreeSource  #mesquite.trees.StoredTrees.StoredTrees;
				tell It;
					setTreeBlock 5;
					setTreeBlockID 015ed70bf1779;
					toggleUseWeights off;
				endTell;
				setAssignedID 1306.1506850125659.2869725655183429407;
				getTreeWindow;
				tell It;
					setExplanationSize 30;
					setAnnotationSize 20;
					setFontIncAnnot 0;
					setFontIncExp 0;
					setSize 1374 663;
					setLocation 27 63;
					setFont SanSerif;
					setFontSize 10;
					getToolPalette;
					tell It;
					endTell;
					setActive;
					getTreeDrawCoordinator #mesquite.trees.BasicTreeDrawCoordinator.BasicTreeDrawCoordinator;
				tell It;
					suppress;
					setTreeDrawer  #mesquite.trees.SquareLineTree.SquareLineTree;
					tell It;
						setNodeLocs #mesquite.trees.NodeLocsStandard.NodeLocsStandard;
						tell It;
							branchLengthsToggle off;
							toggleScale on;
							toggleBroadScale off;
							toggleCenter on;
							toggleEven on;
							setFixedTaxonDistance 0;
						endTell;
						setEdgeWidth 4;
						showEdgeLines on;
						orientUp;
					endTell;
					setBackground White;
					setBranchColor Black;
					showNodeNumbers off;
					showBranchColors on;
					labelBranchLengths off;
					centerBrLenLabels on;
					showBrLensUnspecified on;
					showBrLenLabelsOnTerminals on;
					setBrLenLabelColor 0 0 255;
					setNumBrLenDecimals 6;
					desuppress;
					getEmployee #mesquite.trees.BasicDrawTaxonNames.BasicDrawTaxonNames;
					tell It;
						setColor Black;
						toggleColorPartition off;
						toggleColorAssigned on;
						toggleShadePartition off;
						toggleShowFootnotes on;
						toggleNodeLabels on;
						toggleCenterNodeNames off;
						toggleShowNames on;
						namesAngle ?;
					endTell;
				endTell;
					setTreeNumber 1;
					setDrawingSizeMode 0;
					toggleLegendFloat on;
					scale 0;
					toggleTextOnTree off;
					togglePrintName on;
					showWindow;
				endTell;
				desuppressEPCResponse;
				getEmployee #mesquite.trees.ColorBranches.ColorBranches;
				tell It;
					setColor Red;
					removeColor off;
				endTell;
				getEmployee #mesquite.ornamental.BranchNotes.BranchNotes;
				tell It;
					setAlwaysOn off;
				endTell;
				getEmployee #mesquite.ornamental.ColorTreeByPartition.ColorTreeByPartition;
				tell It;
					colorByPartition off;
				endTell;
				getEmployee #mesquite.ornamental.DrawTreeAssocDoubles.DrawTreeAssocDoubles;
				tell It;
					setOn on;
					toggleShow consensusFrequency;
					toggleShow bootstrapFrequency;
					toggleShow posteriorProbability;
					toggleShow consensusFrequency;
					toggleShow posteriorProbability;
					toggleShow bootstrapFrequency;
					setDigits 4;
					setThreshold ?;
					writeAsPercentage off;
					toggleCentred off;
					toggleHorizontal on;
					toggleWhiteEdges on;
					toggleShowOnTerminals on;
					setFontSize 10;
					setOffset 0  0;
				endTell;
				getEmployee #mesquite.ornamental.DrawTreeAssocStrings.DrawTreeAssocStrings;
				tell It;
					setOn on;
					toggleCentred on;
					toggleHorizontal on;
					setFontSize 10;
					setOffset 0  0;
					toggleShowOnTerminals on;
				endTell;
				getEmployee #mesquite.trees.TreeInfoValues.TreeInfoValues;
				tell It;
					panelOpen false;
				endTell;
			endTell;
		endTell;
		getEmployee  #mesquite.charMatrices.BasicDataWindowCoord.BasicDataWindowCoord;
		tell It;
			showDataWindow #8652449150601521815 #mesquite.charMatrices.BasicDataWindowMaker.BasicDataWindowMaker;
			tell It;
				getWindow;
				tell It;
					setExplanationSize 30;
					setAnnotationSize 20;
					setFontIncAnnot 0;
					setFontIncExp 0;
					setSize 1374 663;
					setLocation 27 63;
					setFont SanSerif;
					setFontSize 10;
					getToolPalette;
					tell It;
						setTool mesquite.charMatrices.BasicDataWindowMaker.BasicDataWindow.ibeam;
					endTell;
					setTool mesquite.charMatrices.BasicDataWindowMaker.BasicDataWindow.ibeam;
					colorCells  #mesquite.charMatrices.NoColor.NoColor;
					colorRowNames  #mesquite.charMatrices.TaxonGroupColor.TaxonGroupColor;
					colorColumnNames  #mesquite.charMatrices.CharGroupColor.CharGroupColor;
					colorText  #mesquite.charMatrices.NoColor.NoColor;
					setBackground White;
					toggleShowNames on;
					toggleShowTaxonNames on;
					toggleTight off;
					toggleThinRows off;
					toggleShowChanges on;
					toggleSeparateLines off;
					toggleShowStates on;
					toggleAutoWCharNames on;
					toggleAutoTaxonNames off;
					toggleShowDefaultCharNames off;
					toggleConstrainCW on;
					toggleBirdsEye off;
					toggleShowPaleGrid off;
					toggleShowPaleCellColors off;
					toggleShowPaleExcluded off;
					togglePaleInapplicable on;
					toggleShowBoldCellText off;
					toggleAllowAutosize on;
					toggleColorsPanel off;
					toggleDiagonal on;
					setDiagonalHeight 80;
					toggleLinkedScrolling on;
					toggleScrollLinkedTables off;
					newAssistant  #mesquite.distance.ShowDistance.ShowDistance;
				tell It;
					getEmployee #mesquite.distance.TaxaDistFromMatrixSrc.TaxaDistFromMatrixSrc;
					tell It;
						getMatrixSource  #mesquite.charMatrices.CharMatrixCoordIndep.CharMatrixCoordIndep;
						tell It;
							setCharacterSource #mesquite.charMatrices.StoredMatrices.StoredMatrices;
							tell It;
								setDataSet #8652449150601521815;
							endTell;
						endTell;
						setDistanceTask  #mesquite.distance.UncorrectedDistance.UncorrectedDistance;
					endTell;
				endTell;
					newAssistant  #mesquite.distance.ShowDistance.ShowDistance;
				tell It;
					getEmployee #mesquite.distance.TaxaDistFromMatrixSrc.TaxaDistFromMatrixSrc;
					tell It;
						getMatrixSource  #mesquite.charMatrices.CharMatrixCoordIndep.CharMatrixCoordIndep;
						tell It;
							setCharacterSource #mesquite.charMatrices.StoredMatrices.StoredMatrices;
							tell It;
								setDataSet #8652449150601521815;
							endTell;
						endTell;
						setDistanceTask  #mesquite.distance.UncorrectedDistance.UncorrectedDistance;
					endTell;
				endTell;
				endTell;
				showWindow;
				getWindow;
				tell It;
					forceAutosize;
				endTell;
				getEmployee #mesquite.charMatrices.AlterData.AlterData;
				tell It;
					toggleBySubmenus off;
				endTell;
				getEmployee #mesquite.charMatrices.ColorByState.ColorByState;
				tell It;
					setStateLimit 9;
					toggleUniformMaximum on;
				endTell;
				getEmployee #mesquite.charMatrices.ColorCells.ColorCells;
				tell It;
					setColor Red;
					removeColor off;
				endTell;
				getEmployee #mesquite.categ.StateNamesStrip.StateNamesStrip;
				tell It;
					showStrip off;
				endTell;
				getEmployee #mesquite.charMatrices.AnnotPanel.AnnotPanel;
				tell It;
					togglePanel off;
				endTell;
				getEmployee #mesquite.charMatrices.CharReferenceStrip.CharReferenceStrip;
				tell It;
					showStrip off;
				endTell;
				getEmployee #mesquite.charMatrices.QuickKeySelector.QuickKeySelector;
				tell It;
					autotabOff;
				endTell;
				getEmployee #mesquite.charMatrices.SelSummaryStrip.SelSummaryStrip;
				tell It;
					showStrip off;
				endTell;
				getEmployee #mesquite.categ.SmallStateNamesEditor.SmallStateNamesEditor;
				tell It;
					panelOpen true;
				endTell;
			endTell;
		endTell;
		endTell;
end;


